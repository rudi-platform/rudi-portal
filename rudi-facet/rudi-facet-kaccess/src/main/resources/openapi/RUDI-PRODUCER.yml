#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
#
# [- LIST OF CHANGES -]
#
# [1.1.0]
#   - Heavy restructuration that keeps only the required properties for Metadata
#   - 'RudiID' scheme deleted and replaced by 'UUIDv4'
#   - 'File' renamed in 'MediaFile'
#   - 'Series' renamed in 'MediaSeries'
#   - 'lang' parameter removed from 'resources' routes
#   - 'abstract' renamed in 'synopsis'
#   - 'minimum' is incorrect for arrays -> 'minItems'
#   - IntegrationReport.version is now a string
#
# [1.2.0]
#   - Schemas 'SkosConcept' and 'SkosScheme'
#   - Added 'access_condition' and especially 'access_condition.licence'
#   - Licence, LicenceCustom and LicenceStandard schemas
#   - $ref: 'UUIDv4' replaced by {type: string; format: uuid}.
#   - 'UUIDv4' schema deleted
#
# [1.2.1]
#   - 'count_by', 'sort_by', 'group_by', 'group_limit', 'group_offset',
#     'fields', 'updated_after' and 'updated_before' added as parameters
#     of the main GET /resources path.
#   - 'media_name' property added to 'Media' scheme
#   - 'scheme_role' and 'scheme_uri' added to 'SkosScheme' scheme
#
# [1.2.2]
#   - Suppression of paths not accessible from the Portal
#
# [1.2.3]
#   - Modification of the access to the list of metadata
#
# [1.3.0]
#   - Added 'MediaService' type of Media, to be able to serve geoserver files
#     or other API/webservices
#   - Added to 'Media' the following properties:
#       - 'media_caption' (description),
#       - 'media_dates' (dates of the creation / last update of the Media),
#       _ 'media_visual' (URI towards a quick visualization of the Media)
#   - Added to 'Organization' the following properties:
#       - 'organization_caption' (more explicit name of the Organization)
#       - 'organization_summary' (description of the Organization)
#       - 'organization_coordinates' (GPS coordinates of the Organization)
#   - Added to 'Contact' the following property:
#       - 'contact_summary' (description of the Contact)
#   - Added 'metadata_info.metadata_source': URI of the initial metadata
#   - Connector can now be described with 'connector_parameters' property
#   - Added 'expires' to the Dates to signal a date after which the data /
#     metadata may not be available or relevant anymore
#   - Added MediaTypes '+crypt' for encrypted files
#   - Added a new MIME type 'text/x-yaml' for .yaml / .yml files
#
# [1.4.0]
#   - Added 'ext_metadata' to be able to extend the current metadata with
#     additional sub-parts, in particular 'ext_selfdata' to describe a
#     dataset that contains personal (GDPR) information.
#
# [1.4.1]
#   - The metadata_provider no longer needs to be filled in the metadatas,
#     as the provider of the authenticated nodeProvider is now used for the request.
#   - Summary is now a RichDictionaryEntry with lang, text, and html fields (instead of a DictionaryEntry)
#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
openapi: 3.0.0
info:
  version: 1.4.0
  title: Public API for RUDI producer node
  description: "API pour l'accès aux données au niveau du nœud producteur RUDI"
  termsOfService: 'no'
  contact:
    name: Olivier Martineau
    email: 'community@rudi-univ-rennes1.fr'
  license:
    name: EUPL 1.2
    url: https://eupl.eu/1.2/fr

#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
servers:
  - url: https://data-rudi.aqmo.org

#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
# DEFINITIONS
# - 'Portal': the main RUDI catalog for all metadata in the RUDI system
# - 'Producer node': The RUDI node where data is produced and published with its
#                    metadata
# - 'Producer': Entity that produces the data on the Producer node
# - 'Provider': Entity that publishes the data and metadata on the Producer node
# - 'Resource': concerns both data and metadata for a designated resource
# - 'Metadata': the metadata for a designated resource
# - 'Data': the data for a designated resource

#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
tags:
  - name: Metadata
  - name: Report

#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
paths: {} # On ne reprend pas les path du swagger de l'IRISA

#•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
components:
  #=============================================================================
  # See schemas definitions at
  # https://github.com/rudi-platform/rudi-documentation/tree/main/schemas
  #=============================================================================
  schemas:
    #---------------------------------------------------------------------------
    'Metadata':
      type: object
      required:
        - global_id

        - resource_title
        - synopsis
        - summary

        - theme
        - keywords

        - producer
        - contacts

        - available_formats

        #- temporal_spread
        #- geography
        - dataset_dates
        - storage_status

        - access_condition

        - metadata_info

      properties:
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # RESOURCE IDENTIFICATION
        #——————————————————————————
        'global_id':
          description: Identifiant du jeu de données dans Rudi, Universally unique identifier v4 format
          type: string
          format: uuid

        #——————————————————————————
        'local_id':
          description: Identifier in the data producer system
          type: string
          #TODO: Constraints?
          # - pattern for avoiding spaces and unusal characters?
          # - max lenght?
          example: '2020.11-Laennec-AQMO-air quality sensors measures'

        #——————————————————————————
        'doi':
          $ref: '#/components/schemas/DOI'
        dataverse_doi:
          description: Digital object identifier (modern Crossref DOIs version) generated by dataverse
          type: string
          pattern: '^doi:10\.\d{4,9}/[-.;()/:\w]+$'

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # DATASET DESCRIPTION
        #——————————————————————————
        'resource_title':
          description: Simple name for the resource
          type: string
          maxLength: 150
          example: "Données de capteurs de la qualité de l'air, novembre 2020, Laënnec"
        # !DICO!

        #——————————————————————————
        'synopsis':
          description: Short description for the whole dataset
          type: array
          items:
            $ref: '#/components/schemas/DictionaryEntry'
          minItems: 1
          # TODO: size ≤ 150
        # !DICO!

        #——————————————————————————
        'summary':
          description: More precise description for the whole dataset
          type: array
          items:
            $ref: '#/components/schemas/RichDictionaryEntry'
          minItems: 1
          # TODO: size ≤ 500
        # !DICO!

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # CLASSIFICATION
        #——————————————————————————
        'theme':
          $ref: '#/components/schemas/Theme'
        # !SKOS!

        #——————————————————————————
        'keywords':
          description: List of tags that can be used to retrieve the data
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
        # !SKOS!

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # INVOLVED PARTIES
        #——————————————————————————
        'producer':
          $ref: '#/components/schemas/Organization'

        #——————————————————————————
        'contacts':
          description: Address to ask details on the dataset and its production
          type: array
          items:
            $ref: '#/components/schemas/Contact'

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # CONTAINER DESCRIPTION
        #——————————————————————————
        'available_formats':
          description: Available formats
          type: array
          items:
            $ref: '#/components/schemas/Media'
          minItems: 1

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # DATASET INFO
        #——————————————————————————
        'resource_languages':
          description: Languages available in the dataset, if relevant
          type: array
          items:
            $ref: '#/components/schemas/Language'
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        #--default: [fr]
        # this block is comment to ensure previous behavior 
        # openapi generator does not provide real default value before 7.0.1

        #——————————————————————————
        'temporal_spread':
          description: >
            Period of time described by the data.
            If the end date is not known (because the resource is still valid in
            the present for instance, the end_date field will be left blank)
            For a one-time measurement, one can fill both start and end date 
            with the same value.
          type: object
          required:
            - start_date
          properties:
            #......................
            'start_date':
              $ref: '#/components/schemas/Date'
            #......................
            'end_date':
              $ref: '#/components/schemas/Date'

        #——————————————————————————
        'geography':
          description: Geographic localisation of the data
          type: object
          required:
            - bounding_box
          properties:
            #......................
            'bounding_box':
              description: >
                Geographic distribution of the data as a rectangle.
                The 4 parameters are given as decimal as described in the
                norm ISO 6709
              type: object
              required:
                - west_longitude
                - east_longitude
                - north_latitude
                - south_latitude
              properties:
                'north_latitude':
                  description: Northernmost latitude given as a decimal number (norm ISO 6709)
                  type: number
                  minimum: -90
                  maximum: 90
                'south_latitude':
                  description: Southernmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -90
                  maximum: 90
                'west_longitude':
                  description: Westernmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -180
                  maximum: 180
                'east_longitude':
                  description: Easternmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -180
                  maximum: 180
            #......................
            # Global geographic distribution of the data expressed in 'EPSG:4326/WGS 84' projection
            'geographic_distribution':
              $ref: 'geojson.yml#/components/schemas/GeoJsonObject'
            #......................
            'projection':
              description: Cartographic projection used in the data.
                EPSG codes highly recommended.
              type: string
              default: 'WGS 84 (EPSG:4326)'
              example:
                'WGS 84 (EPSG:4326)'
              # 'RGF93/Lambert-93 (EPSG:2154)'
              # 'RGF93/CC48 (EPSG:3948)'
              #TODO: 'Projection' thesaurus

        #——————————————————————————
        'dataset_size':
          description: Indicative total size of the data
          type: object
          properties:
            #......................
            'numbers_of_records':
              type: integer
              minimum: 0
            #......................
            'number_of_fields':
              type: integer
              minimum: 0

        #——————————————————————————
        'dataset_dates':
          $ref: '#/components/schemas/ReferenceDates' # On met $ref en 1er car s'il est en 2e, il est ignoré par la génération de code
          description: Dates of the actions performed on the data (creation, publishing, update, deletion...)

        #——————————————————————————
        'storage_status':
          description: >-
            Status of the storage of the dataset
            Metadata can exist without the data
            - online      = data are published and available
            - archived    = data are not immediately available, access is not automatic
            - unavailable = data were deleted
          type: string
          enum: [online, archived, unavailable]
        # !SKOS!

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # ACCESS CONSTRAINTS
        #——————————————————————————
        'access_condition':
          description: >
            Access restrictions for the use of data in the form of licence,
            confidentiality, terms of service, habilitation or required rights,
            economical model. Default is open licence.
            #TODO: to be defined. Possible redundencies with other fields!
          type: object
          required:
            - licence
          properties:
            #......................
            'confidentiality':
              description: Restriction level for the resource
              type: object
              properties:
                'restricted_access':
                  description: >
                    True if the dataset has a restricted access.
                    False for open data
                  type: boolean
                'gdpr_sensitive':
                  description: >
                    True if the dataset embeds personal data
                  type: boolean
            #......................
            'licence':
              $ref: '#/components/schemas/Licence'
            #......................
            'usage_constraint':
              description: >
                Describes how constrained is the use of the resource
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              example:
                [
                  {
                    'lang': 'fr',
                    'text': 'Usage libre sous réserve des mentions obligatoires sur tout document de diffusion',
                  },
                ]
            #......................
            'bibliographical_reference':
              description: >
                Information that MUST be cited every time the data is used, 
                most likely a BibTeX entry
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
            #......................
            'mandatory_mention':
              description: >
                Mention that must be cited verbatim in every publication that
                makes use of the data
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              minItems: 1
              example: [{'lang': 'fr-FR', 'text': 'Source: Région Bretagne'}]
            #......................
            'access_constraint':
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
            #......................
            'other_constraints':
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              example: [{'lang': 'fr', 'text': "Pas de restriction d'accès public"}]
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # METADATA INFO
        #——————————————————————————
        'metadata_info':
          description: Metadata on the metadata
          type: object
          required:
            - api_version
          properties:
            #......................
            'api_version':
              type: string
              pattern: '([0-9]{1,2}\.){2}[0-9]{1,2}[a-z]*'
            #......................
            'metadata_dates':
              $ref: '#/components/schemas/ReferenceDates'
            #......................
            'metadata_provider':
              $ref: '#/components/schemas/Organization' # On met $ref en 1er car s'il est en 2e, il est ignoré par la génération de code
              description: Description of the organization that produced the metadata

            #......................
            'metadata_contacts':
              description: Addresses to get further information on the metadata
              type: array
              items:
                $ref: '#/components/schemas/Contact'
            #......................
            'metadata_source':
              description: URI of the initial metadata
              type: string
              format: uri
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # EXTENDED METADATA
        #——————————————————————————
        'ext_metadata':
          description: Extension of the metadata
          type: object
          properties:
            'ext_selfdata':
              description: Extension to deal with the declaration of "self-data". The format of the JSON object that describes the self-data is refenced bellow as "1.0.0self" and is described in an external OpenAPI document.
              type: object
              properties:
                'ext_selfdata_connector':
                  # Connector towards an encrypted media that contains the metadata extension as a JSON object in "1.0.0self" format.
                  # This is stored on the Producer Node but not sent to the Portal.
                  # A version of metadata that has such a field is referenced as "1.4.0int".
                  # All "1.4.0int" metadata are set as readonly on the Producer Node UX.
                  $ref: '#/components/schemas/Connector'
                'ext_selfdata_content':
                  # JSON object of the metadata in "1.0.0self" format that describes the self-data
                  # This is sent to the Portal but not stored in the Producer Node.
                  # A version of metadata that has such a field is referenced as "1.4.0ext".
                  $ref: './RUDI-PRODUCER-ext_selfdata_content.yml#/components/schemas/SelfdataContent'

    #---------------------------------------------------------------------------
    'Organization': # Organization
      description: >
        Entity that produced the data or provided the associated metadata
      type: object
      required:
        - organization_id
        - organization_name
      properties:
        #——————————————————————————
        'organization_id':
          description: Unique identifier of the organization in RUDI system
          type: string
          format: uuid
        #——————————————————————————
        'organization_name':
          description: Updated offical name of the organization
          type: string
        #——————————————————————————
        'organization_address':
          description: Updated offical postal address of the organization
          type: string
        #——————————————————————————
        'organization_coordinates':
          description: GPS coordinates in EPSG:4326/WGS 84 coordinates
          type: object
          properties:
            'latitude':
              type: number
              minimum: -90
              maximum: 90
            'longitude':
              type: number
              minimum: -180
              maximum: 180
        #——————————————————————————
        'organization_caption':
          description: >
            Explicit/complete name for an acronym, or alternative name of the
            organization
          type: string
        #——————————————————————————
        'organization_summary':
          description: Describes the organization
          type: string

    #---------------------------------------------------------------------------
    'Contact':
      description: Address to get further information on the resource
      type: object
      required:
        - contact_id
        - contact_name
        - email
      properties:
        #——————————————————————————
        'contact_id':
          description: Unique identifier of the contact in RUDI system
          type: string
          format: uuid
        #——————————————————————————
        'organization_name':
          description: Updated offical name of the organization
          type: string
        #——————————————————————————
        'contact_name':
          description: Updated name of the service, or possibly the person
          type: string
        #——————————————————————————
        'role':
          description: Updated status of the contact person
          type: string
          example: Administrator
        #——————————————————————————
        'contact_summary':
          description: Description of the contact person
          type: string
        #——————————————————————————
        'email':
          description: >
            Unique E-mail address, possibly not nominative to be less dependent
            on changes in the organization, and comply more easily with 
            RGPD rules
          type: string
          format: email
          #TODO: RGPD compliant!

    #---------------------------------------------------------------------------
    'Licence':
      description: Abstract object from which standard and custom licences inherit
      type: object
      required:
        - licence_type
      properties:
        #——————————————————————————
        'licence_type':
          type: string
          enum: ['STANDARD', 'CUSTOM']

      discriminator:
        propertyName: licence_type
        mapping:
          'STANDARD': '#/components/schemas/LicenceStandard'
          'CUSTOM': '#/components/schemas/LicenceCustom'

    #---------------------------------------------------------------------------
    'LicenceStandard':
      allOf:
        - $ref: '#/components/schemas/Licence'
        - description: Standard licence (recognized by RUDI system)
          type: object
          required:
            - licence_label
          properties:
            'licence_label':
              description: Value of the field SkosConcept.concept_code
              type: string
              # format: skosConceptCode
              enum:
                [
                  "apache-2.0",
                  "cc-by-nd-4.0",
                  "etalab-1.0",
                  "etalab-2.0",
                  "gpl-3.0",
                  "mit",
                  "odbl-1.0",
                  "public-domain-cc0"
                ]

      #---------------------------------------------------------------------------
    'LicenceCustom':
      allOf:
        - $ref: '#/components/schemas/Licence'
        - description: Custom licence
          type: object
          required:
            - custom_licence_label
            - custom_licence_uri
          properties:
            'custom_licence_label':
              description: Title of the custom licence
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
            'custom_licence_uri':
              description: URL towards the custom licence
              type: string
              format: uri
              x-constraints: "@org.rudi.common.core.validator.URI"

    #---------------------------------------------------------------------------
    'Media':
      description: Abstract object from which File and Series inherit
      type: object
      required:
        - media_type
        - media_id
        - connector
      properties:
        #——————————————————————————
        'media_type':
          description: Transmission mode (file | series)
          type: string
          enum: ['FILE', 'SERVICE', 'SERIES']
        #——————————————————————————
        'media_id':
          type: string
          format: uuid
        #——————————————————————————
        'media_name':
          description: Name of the Media
          type: string
        #——————————————————————————
        'media_caption':
          description: Description of the Media
          type: string
        #——————————————————————————
        'media_visual':
          description: Link towards a (low-fidelity) visualization of the Media
          type: string
          format: uri
        #——————————————————————————
        'media_dates':
          $ref: '#/components/schemas/ReferenceDates' # On met $ref en 1er car s'il est en 2e, il est ignoré par la génération de code
          description: Time of the creation / last update of the Media

        #——————————————————————————
        'connector':
          $ref: '#/components/schemas/Connector'

      discriminator:
        propertyName: media_type
        mapping:
          'FILE': '#/components/schemas/MediaFile'
          'SERVICE': '#/components/schemas/MediaService'
          'SERIES': '#/components/schemas/MediaSeries'

    #---------------------------------------------------------------------------
    'MediaService':
      allOf:
        - $ref: '#/components/schemas/Media'
        - description: Link to a service
          type: object
          properties:
            'api_documentation_url':
              description:
                Link towards the resource that describes the structure of the API
              type: string
              format: uri

    #---------------------------------------------------------------------------
    'MediaFile':
      allOf:
        - $ref: '#/components/schemas/Media'
        - description: Description of the container of data as a file
          type: object
          required:
            - file_type
            - file_size
            - checksum
          properties:
            #——————————————————————————
            'file_type':
              # File type (determined automatically)
              $ref: '#/components/schemas/MediaType'
            #——————————————————————————
            'file_size':
              description: >
                Size of the file, in bytes 
                (determined automatically)
              type: integer
              format: int64
            #——————————————————————————
            'checksum':
              description: Hash that makes it possible to check the file intergrity
                (determined automatically)
              type: object
              required:
                - algo
                - hash
              properties:
                'algo':
                  $ref: '#/components/schemas/HashAlgorithm'
                'hash':
                  type: string
            #——————————————————————————
            'file_structure':
              description: >
                Link towards the resource that describes the structure of the data
                (language, norm, data structure, JSON schema, OpenAPI, etc.)
              type: string
              format: uri
              #'URI definition - https://tools.ietf.org/html/rfc2396'
            #——————————————————————————
            'file_encoding':
              description: Source encoding of the data
                (determined automatically)
              type: string
              #format:
              #ISO/CEI 10646'
              #TODO: thesaurus for encoding

    #---------------------------------------------------------------------------
    'MediaSeries':
      allOf:
        - $ref: '#/components/schemas/Media'
        - description: Description of the container of data as a file
          type: object
          properties:
            #——————————————————————————
            'latency':
              description: >
                Theorical delay between the production of the record and its availability,
                in milliseconds.
              type: integer
              format: int64
              minimum: 0

            #——————————————————————————
            'period':
              description: Theorical delay between the production of two records, in milliseconds.
              type: integer
              format: int64
              minimum: 0

            #——————————————————————————
            'current_number_of_records':
              description: Actual number of records
              type: integer
              format: int64
              minimum: 0

            #——————————————————————————
            'current_size':
              description: Actual size of the data, in bytes (refreshed automatically)
              type: integer
              format: int64
              minimum: 0

            #——————————————————————————
            'total_number_of_records':
              description: Estimated total number of records
              type: integer
              format: int64
              minimum: 0

            #——————————————————————————
            'total_size':
              description: Estimated total size of the data, in bytes
              type: integer
              format: int64
              minimum: 0

    #---------------------------------------------------------------------------
    'Connector':
      description: >
        Direct access to the dataset.
        In the case of open data without access restriction, this can be a 
        simple download link e.g. a URL
        The interface contract chosen can enable request with specified
        parameters, or make it possible to extract a GeoWMS or a GeoWFS
        If it is not defined, the link should be a direct download link.
      type: object
      required:
        - url
      properties:
        #——————————————————————————
        'url':
          type: string
          format: uri
        #——————————————————————————
        'interface_contract':
          description: Protocol to access the resource through the URL
          type: string # original
          # maxLength: 10
        #——————————————————————————
        'connector_parameters':
          description:
            Additional parameters that can be used to refine the call to the URL
          type: array
          items:
            type: object
            properties:
              'key':
                type: string
                description: A parameter name
              'value':
                type: string
                description: Current value for the parameter
              'type':
                type: string
                description: Type of the value, in capital letters
                enum: [STRING, BOOLEAN, DATE, LONG, DOUBLE, ENUM]
                default: 'STRING'
              'usage':
                type: string
                description: Text that explains how to use this parameter
              'accepted_values':
                description: List of the parameters that can be used
                type: array
                items:
                  type: object

    #---------------------------------------------------------------------------
    'DOI':
      description: Digital object identifier (modern Crossref DOIs version)
      type: string
      pattern: '^10.\d{4,9}/[-.;()/:\w]+$'
      # \d : digit character == [0-9]
      # \w : word character == [0-9a-zA-Z_]
      # /i (at the end) : expression is case insensitive
      #source: https://www.crossref.org/blog/dois-and-matching-regular-expressions/
      #alternative: https://github.com/regexhq/doi-regex/blob/master/index.js

    #---------------------------------------------------------------------------
    'MediaType':
      description: >
        Most common Media types formerly known as MIME types, as definied in 
        RFC 2049
      type: string
      enum:
        - 'application/geo+json' # Type supprimé en V0.3 mais utilisés par certains JDD de production créés avant la V0.3
        - 'application/x-executable'
        - 'application/graphql'
        - 'application/javascript' # (.js)
        - 'application/json' # (.json)
        - 'application/ld+json'
        - 'application/msword' # (.doc)
        - 'application/pdf' # (.pdf)
        - 'application/sql'
        - 'application/vnd.api+json'
        - 'application/vnd.ms-excel' # (.xls)
        - 'application/vnd.ms-powerpoint' # (.ppt)
        - 'application/vnd.oasis.opendocument.text' # (.odt)
        - 'application/vnd.openxmlformats-officedocument.presentationml.presentation' # (.pptx)
        - 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' # (.xlsx)
        - 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' # (.docx)
        - 'application/x-www-form-urlencoded'
        - 'application/xml'
        - 'application/zip' # (.zip)
        - 'application/zstd' # (.zst)
        - 'audio/mpeg' # (.mpeg | .mpg)
        - 'audio/ogg' # (.ogg)
        - 'image/gif' # (.gif)
        - 'image/apng'
        - 'image/flif'
        - 'image/webp'
        - 'image/x-mng'
        - 'image/jpeg' # (.jpeg)
        - 'image/png' # (.png)
        - 'multipart/form-data'
        - 'text/css' # (.css)
        - 'text/csv' # (.csv)
        - 'text/html' # (.html | .htm)
        - 'text/php' # (.php)
        - 'text/plain' # (.txt)
        - 'text/xml' # (.xml)
        - 'text/x-yaml' # (.yaml | .yml)
        - 'application/geo+json+crypt'
        - 'application/x-executable+crypt' # Unconventionnal MIME types for encypted files
        - 'application/graphql+crypt'
        - 'application/javascript+crypt' # (.js)
        - 'application/json+crypt' # (.json)
        - 'application/ld+json+crypt'
        - 'application/msword+crypt' # (.doc)
        - 'application/pdf+crypt' # (.pdf)
        - 'application/sql+crypt'
        - 'application/vnd.api+json+crypt'
        - 'application/vnd.ms-excel+crypt' # (.xls)
        - 'application/vnd.ms-powerpoint+crypt' # (.ppt)
        - 'application/vnd.oasis.opendocument.text+crypt' # (.odt)
        - 'application/vnd.openxmlformats-officedocument.presentationml.presentation+crypt' # (.pptx)
        - 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet+crypt' # (.xlsx)
        - 'application/vnd.openxmlformats-officedocument.wordprocessingml.document+crypt' # (.docx)
        - 'application/x-www-form-urlencoded+crypt'
        - 'application/xml+crypt'
        - 'application/zip+crypt' # (.zip)
        - 'application/zstd+crypt' # (.zst)
        - 'audio/mpeg+crypt' # (.mpeg | .mpg)
        - 'audio/ogg+crypt' # (.ogg)
        - 'image/gif+crypt' # (.gif)
        - 'image/apng+crypt'
        - 'image/flif+crypt'
        - 'image/webp+crypt'
        - 'image/x-mng+crypt'
        - 'image/jpeg+crypt' # (.jpeg)
        - 'image/png+crypt' # (.png)
        - 'multipart/form-data+crypt'
        - 'text/css+crypt' # (.css)
        - 'text/csv+crypt' # (.csv)
        - 'text/html+crypt' # (.html | .htm)
        - 'text/php+crypt' # (.php)
        - 'text/plain+crypt' # (.txt)
        - 'text/xml+crypt' # (.xml)
        - 'text/x-yaml+crypt' # (.yaml | .yml)

    #---------------------------------------------------------------------------
    'FileExtension':
      description: Source format of the data
      type: string
      enum:
        - csv
        - doc
        - docx
        - jpg
        - json
        - odt
        - pdf
        - png
        - ppt
        - pptx
        - txt
        - xls
        - xlsx
        - xml

    #---------------------------------------------------------------------------
    'HashAlgorithm':
      description: Method for computing the integrity hash of the data
      type: string
      enum: ['MD5', 'SHA-256', 'SHA-512']
      #TODO: define the thesaurus for the hash algorithms

    #---------------------------------------------------------------------------
    'Theme':
      description: Category for thematic classification of the data
      type: string
      # TODO: "Theme" thesaurus
      # !SKOS!

    #---------------------------------------------------------------------------
    'Keyword':
      description: Tags to help researching the data
      type: string
      # TODO: "Tags" thesaurus
      # !SKOS!

    #---------------------------------------------------------------------------
    'Date':
      description: 'Date in the ISO 8601 format (e.g. 2021-07-20T00:00:00.000Z)'
      type: string
      format: date-time
      #TODO: timezone + nanosec?

    #---------------------------------------------------------------------------
    'ReferenceDates':
      description: 'Dates of the ac tions on the data'
      type: object
      required:
        - created
        - updated
      properties:
        'created':
          $ref: '#/components/schemas/Date'
        'validated':
          $ref: '#/components/schemas/Date'
        'published':
          $ref: '#/components/schemas/Date'
        'updated':
          $ref: '#/components/schemas/Date'
        'expires':
          $ref: '#/components/schemas/Date'
        'deleted':
          $ref: '#/components/schemas/Date'

    #---------------------------------------------------------------------------
    'DictionaryList':
      type: object
      required:
        - lang
        - text
      properties:
        'lang':
          $ref: '#/components/schemas/Language'
        'text':
          type: array
          items:
            type: string
            #TODO: possibly set limitations (size, characters allowed, HTML-ready or not)
      example: {lang: 'fr-FR', text: ['abeilles', 'Apis']}

    #---------------------------------------------------------------------------
    'DictionaryEntry':
      type: object
      required:
        - lang
        - text
      properties:
        'lang':
          $ref: '#/components/schemas/Language'
        'text':
          type: string
          #TODO: possibly set limitations (size, characters allowed, HTML-ready or not)
      example: {lang: 'fr-FR', text: 'abeilles'}

    #---------------------------------------------------------------------------
    'RichDictionaryEntry':
      allOf:
        - $ref: '#/components/schemas/DictionaryEntry'
        - type: object
          description: >
            Formatted description, HTML for instance. Should reflect the above
            plain text description.
          properties:
            'html':
              type: string
          example: {
            'lang': 'en-GB',
            'text':
              "Cryptides de Bretagne: Les Marie Morganes, sirènes d’Ouessant, 
                    les Gallizènes de l’île de Sein, les korrigans, l'Ankou.",
            'html':
              "<p>Cryptides de Bretagne:</p>
                      <dl>
                        <dt>Les Marie Morganes</dt><dd>Sirènes d’Ouessant.</dd>
                        <dt>Les Gallizènes</dt><dd>Neuf prêtresses de l’île de Sein.</dd>
                        <dt>Les korrigans</dt><dd>Lutins farceurs.</dd>
                        <dt>L'Ankou</dt>
                          <dd>
                            La mort personnifiée, squelette drapé d’un linceul sombre
                            tenant une faux emmanchée à l’envers.
                          </dd>
                      </dl>"
          }

      #---------------------------------------------------------------------------
    'Language':
      description: >
        Lowercase ISO-639 language code followed by the
        uppercase 2 letter ISO 3166-1 alpha-2 country code,
        both joined by an hyphen-minus sign, or alternatively the 
        lowercase ISO-639 language code alone
      type: string
      enum:
        [
          # On conserve les langues déjà existantes pour éviter de faire planter les JDD existants :
          'cs-CZ',
          'da-DK',
          'de-CH',
          'de-DE',
          'en-GB',
          'en-US',
          'el-GR',
          'es-ES',
          'fr-FR',
          'hu-HU',
          'it-IT',
          'no-NO',
          'pl-PL',
          'pt-PT',
          'ro-RO',
          'ru-RU',
          'sk-SK',
          # Langues ajoutées :
          'cs',
          'da',
          'de',
          'en',
          'el',
          'es',
          'fr',
          'hu',
          'it',
          'no',
          'pl',
          'pt',
          'ro',
          'ru',
          'sk',
        ]

      # norm: https://www.rfc-editor.org/rfc/bcp/bcp47.txt
      # source for enum: https://app.swaggerhub.com/apis/nologo/thesaurus/1.0.0#/default/get_thesaurus_v1

      # !SKOS!

  #TODO : thesaurus : tableau de valeurs simples ou couples {label: "Texte à
  #       afficher pour l'utilisateur", "valeur": "ValeurAssociee"}

  #=============================================================================
#•••••••••••••••••••••••••••••••••••[ EOF ]••••••••••••••••••••••••••••••••••••#
