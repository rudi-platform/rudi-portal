<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.rudi</groupId>
		<artifactId>rudi-application</artifactId>
		<version>2.0.4</version>
	</parent>

	<artifactId>rudi-application-front-office</artifactId>

	<properties>
		<angular.project.location>angular-project</angular.project.location>
		<angular.project.nodeinstallation>node_installation</angular.project.nodeinstallation>
		<jar.creation>false</jar.creation>
		<sonar.language>ts</sonar.language>
		<sonar.nodejs.executable>${env.CI_PROJECT_DIR}/rudi-application/rudi-application-front-office/${angular.project.nodeinstallation}/node/node</sonar.nodejs.executable>
		<sonar.sources>${angular.project.location}</sonar.sources>
		<sonar.exclusions>**/node_modules/**/*, **/*.spec.ts, **/*.e2e.ts, **/environments/**/*, **/*.routes.ts, **/main.ts, **/test-setup.ts, **/polyfills.ts</sonar.exclusions>
		<sonar.coverage.exclusions>**/*.ts</sonar.coverage.exclusions>
	</properties>

	<build>
		<finalName>${project.parent.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.15.0</version>
				<configuration>
					<workingDirectory>${angular.project.location}</workingDirectory>
					<installDirectory>${angular.project.nodeinstallation}</installDirectory>
				</configuration>
				<executions>
					<!-- It will install nodejs and npm -->
					<execution>
						<phase>generate-resources</phase>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v20.11.0</nodeVersion>
							<npmVersion>10.2.4</npmVersion>
						</configuration>
					</execution>
					<execution>
						<phase>generate-resources</phase>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>${npmicommand}</arguments>
						</configuration>
					</execution>

					<!-- Generation des sources TypeScript à partir du fichier rudi-konsult.json -->
					<execution>
						<phase>generate-resources</phase>
						<id>npm generate api</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run generate:all</arguments>
						</configuration>
					</execution>

					<execution>
						<phase>prepare-package</phase>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>${npmcommand}</arguments>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<!-- Plugin to copy the content of /angular/dist/ directory to output 
				directory (ie/ /target/transactionManager-1.0/) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<delimiters>
								<delimiter>@</delimiter>
							</delimiters>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.directory}/${project.parent.artifactId}/dist
							</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/${angular.project.location}/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<!-- Profil de développement local -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<npmicommand>ci</npmicommand>
				<npmcommand>run build-dev</npmcommand>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>

		<!-- Profil de production (utilisé sur la plateforme de DEV, QUALIF et 
			PROD) -->
		<profile>
			<id>prod</id>
			<properties>
				<npmicommand>ci</npmicommand>
				<npmcommand>run build-prod</npmcommand>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>

	</profiles>

</project>
