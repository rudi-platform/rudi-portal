{
  "name": "angular-project",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve --proxy-config proxy.conf.json",
    "start-https": "ng serve --proxy-config proxys.conf.json",
    "start-prod": "ng serve --configuration=production --proxy-config proxy.conf.json",
    "start-prod-https": "ng serve --configuration=production --proxy-config proxys.conf.json",
    "build-prod": "ng build --configuration=production",
    "build-dev": "ng build",
    "build-${env}": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "generate:mydy": "openapi-generator-cli help",
    "generate:help": "openapi-generator-cli config-help --instantiation-types -g typescript-angular",
    "generate:all": "npm run generate:all-facets && npm run generate:all-microservices",
    "generate:all-facets": "npm run generate:kmedia && npm run generate:kaccess && npm run generate:bpmn && npm run generate:rva && npm run generate:cms",
    "generate:bpmn": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json -o micro_service_modules/api-bpmn",
    "generate:kaccess": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-facet/rudi-facet-kaccess/src/main/resources/openapi/rudi-kaccess-model.yml -o micro_service_modules/api-kaccess",
    "generate:kmedia": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml -o micro_service_modules/api-kmedia",
    "generate:rva": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-facet/rudi-facet-rva/openapi/rudi-rva-model.json -o micro_service_modules/api-rva",
    "generate:cms": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-facet/rudi-facet-cms/openapi/rudi-cms-model.json -o micro_service_modules/api-cms",
    "generate:all-microservices": "npm run generate:strukture && npm run generate:konsult && npm run generate:acl && npm run generate:kos && npm run generate:projekt && npm run generate:selfdata && npm run generate:konsent",
    "generate:strukture": "npm run generate:strukture-model && npm run generate:strukture-api",
    "generate:strukture-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-strukture/openapi/rudi-strukture-api.json -o micro_service_modules/strukture/api-strukture -c openapitools.json -t ./template",
    "generate:strukture-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-strukture/openapi/rudi-strukture-model.json -o micro_service_modules/strukture/strukture-model -c openapitools.json -t ./template",
    "generate:acl": "npm run generate:acl-model && npm run generate:acl-api",
    "generate:acl-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-acl/openapi/rudi-acl-api.json -o micro_service_modules/acl/acl-api -t ./template",
    "generate:acl-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-acl/openapi/rudi-acl-model.json -o micro_service_modules/acl/acl-model",
    "generate:konsult": "npm run generate:konsult-model && npm run generate:konsult-api",
    "generate:konsult-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-konsult/openapi/rudi-konsult-model.json -o micro_service_modules/konsult/konsult-model -c openapitools.json -t ./template",
    "generate:konsult-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-konsult/openapi/rudi-konsult-api.json -o micro_service_modules/konsult/konsult-api -c openapitools.json -t ./template",
    "generate:kos": "npm run generate:kos-model && npm run generate:kos-api",
    "generate:kos-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-kos/openapi/rudi-kos-api.json -o micro_service_modules/kos/kos-api -t ./template",
    "generate:kos-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-kos/openapi/rudi-kos-model.json -o micro_service_modules/kos/kos-model",
    "generate:projekt": "npm run generate:projekt-model && npm run generate:projekt-api",
    "generate:projekt-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-projekt/openapi/rudi-projekt-api.json -o micro_service_modules/projekt/projekt-api -c openapitools.json -t ./template",
    "generate:projekt-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-projekt/openapi/rudi-projekt-model.json -o micro_service_modules/projekt/projekt-model -c openapitools.json -t ./template",
    "generate:selfdata": "npm run generate:selfdata-model && npm run generate:selfdata-api",
    "generate:selfdata-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-selfdata/openapi/rudi-selfdata-api.json -o micro_service_modules/selfdata/selfdata-api -c openapitools.json -t ./template",
    "generate:selfdata-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-selfdata/openapi/rudi-selfdata-model.json -o micro_service_modules/selfdata/selfdata-model -c openapitools.json -t ./template",
    "generate:konsent": "npm run generate:konsent-model && npm run generate:konsent-api",
    "generate:konsent-api": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-konsent/openapi/rudi-konsent-api.json -o micro_service_modules/konsent/konsent-api -c openapitools.json -t ./template",
    "generate:konsent-model": "openapi-generator-cli generate -g typescript-angular -i ../../../rudi-microservice/rudi-microservice-konsent/openapi/rudi-konsent-model.json -o micro_service_modules/konsent/konsent-model -c openapitools.json -t ./template"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^19.2.14",
    "@angular/cdk": "^19.2.19",
    "@angular/common": "^19.2.14",
    "@angular/compiler": "^19.2.14",
    "@angular/core": "^19.2.14",
    "@angular/flex-layout": "^15.0.0-beta.42",
    "@angular/forms": "^19.2.14",
    "@angular/localize": "^19.2.14",
    "@angular/material": "^19.2.19",
    "@angular/material-moment-adapter": "^19.2.19",
    "@angular/platform-browser": "^19.2.14",
    "@angular/platform-browser-dynamic": "^19.2.14",
    "@angular/router": "^19.2.14",
    "@messageformat/core": "^3.3.0",
    "@ng-bootstrap/ng-bootstrap": "^18.0.0",
    "@ngx-translate/core": "^15.0.0",
    "@ngx-translate/http-loader": "^8.0.0",
    "@sleiss/ngx-awesome-uploader": "^19.0.2",
    "ag-grid-angular": "^31.0.3",
    "ag-grid-community": "^31.0.3",
    "bootstrap": "^5.3.2",
    "captchetat-angular": "https://static.piste.gouv.fr/captchEtat/libraries/captchetat-angular-19.0.1.tgz",
    "cropperjs": "^1.6.1",
    "d3": "^7.8.5",
    "file-saver": "^2.0.5",
    "font-awesome": "^4.7.0",
    "loaders.css": "^0.1.2",
    "mime": "^4.0.1",
    "moment": "^2.30.1",
    "ngx-pagination": "^6.0.3",
    "ngx-translate-messageformat-compiler": "^6.5.1",
    "ol": "^7.3.0",
    "proj4": "^2.10.0",
    "rxjs": "^7.8.1",
    "sass": "^1.70.0",
    "swiper": "^11.0.6",
    "tslib": "^2.6.2",
    "uuid": "^9.0.1",
    "xlsx": "^0.18.5",
    "zone.js": "^0.15.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^19.2.16",
    "@angular-eslint/builder": "^19.8.1",
    "@angular-eslint/eslint-plugin": "^19.8.1",
    "@angular-eslint/eslint-plugin-template": "^19.8.1",
    "@angular-eslint/schematics": "^19.8.1",
    "@angular-eslint/template-parser": "^19.8.1",
    "@angular/cli": "^19.2.15",
    "@angular/compiler-cli": "^19.2.14",
    "@openapitools/openapi-generator-cli": "^2.7.0",
    "@types/d3": "^7.4.3",
    "@types/file-saver": "^2.0.7",
    "@types/jasmine": "^5.1.4",
    "@types/node": "^20.11.16",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "eslint": "^9.35.0",
    "jasmine-core": "^5.1.1",
    "jasmine-spec-reporter": "^7.0.0",
    "karma": "^6.4.2",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage": "^2.2.1",
    "karma-jasmine": "^5.1.0",
    "karma-jasmine-html-reporter": "^2.1.0",
    "ng-openapi-gen": "^0.51.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.5.4"
  }
}
