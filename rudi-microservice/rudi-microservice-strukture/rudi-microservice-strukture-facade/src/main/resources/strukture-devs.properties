server.port=8084

server.ssl.enabled=true
server.ssl.key-alias=localhost-certificate
server.ssl.key-store-password=rudissl
server.ssl.key-password=rudissl
server.ssl.key-store=classpath:keystore/rudi-https-certificate.jks
server.ssl.key-store-type=PKCS12
#trust.store=classpath:keystore/rudi-https-certificate.jks
#trust.store.password=rudissl
trust.trust-all-certs=true

# Configuration BDD 
##########################
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=strukture
spring.datasource.password=strukture
spring.jpa.show-sql=true

# Migrations SQL gérées par Flyway
spring.flyway.enabled=true
# Génération du script par hibernate + jpa
spring.jpa.hibernate.ddl-auto=none
# Décommenter les lignes suivantes pour générer le fichier create_all_tables.sql à partir de toutes les Entity du projet
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=../rudi-microservice-strukture-service/src/main/resources/bdd/create_all_tables.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# Configuration Eureka 
##########################
eureka.client.serviceURL.defaultZone=https://admin:4dM1nApp!@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost
eureka.instance.securePortEnabled=true
eureka.instance.nonSecurePortEnabled=true

eureka.client.tls.enabled=${server.ssl.enabled}
eureka.client.tls.key-store=${server.ssl.key-store}
eureka.client.tls.key-store-type=${server.ssl.key-store-type}
eureka.client.tls.key-password=${server.ssl.key-password}
eureka.client.tls.key-store-password=${server.ssl.key-store-password}
eureka.client.tls.trust-store=${eureka.client.tls.key-store}
eureka.client.tls.trust-store-password=${eureka.client.tls.key-password}
eureka.client.tls.trust-store-type=${server.ssl.key-store-type}

# Configuration Security 
##########################
module.oauth2.trust-all-certs=true
module.oauth2.check-token-uri=https://localhost:8085/oauth/check_token
module.oauth2.provider-uri=https://localhost:8085/oauth/token
module.oauth2.client-id=strukture
module.oauth2.client-secret=rudi@123
module.oauth2.scope=read,write

security.jwt.access.tokenKey=901c990dd69fb05617ccbbae01e73053da60099bb5a759e2286c40471af275eb9c55bc54cb4213db3ca29f528586b862251385f78052439c01fe22268e421b60

# Configuration Dataverse
##########################
dataverse.host=https://dataverse-engine-dev-karbon.rennes-metropole-rudi.karbon.open.global
dataverse.api.url=${dataverse.host}/api
dataverse.api.token=8d98bdcb-f3ab-45d2-894e-cddefd6ee727
# dataverse Rudi (catalogue des jeux de données)
dataverse.api.rudi.media.data.alias=rudi_media_data
dataverse.api.rudi.data.alias=rudi_data
dataverse.api.rudi.archive.alias=rudi_archive

## Configuration EMail
##########################
mail.smtp.host=10.215.129.76
mail.smtp.port=1025
email.urlServer=http://localhost:4200
email.urlContact=https://rudi.fr/contact

# Configuration Freemarker
##########################
# Conf locale de surcharge des templates de mail pour les devs (un repertoire quelque part sur la machine)
# bien mettre les mail dans un dossier "templates/lemail.txt"
freemarker.baseDirectory=/opt/rudi_tmp
