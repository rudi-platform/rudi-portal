{
	"openapi": "3.0.0",
	"info": {
		"description": "API Public Strukture Rudi",
		"version": "0.0.1",
		"title": "rudi-strukture-api",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "contact@rudi.fr"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"paths": {
	},
	"components": {
		"schemas": {
			"AbstractLongIdDto": {
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid",
						"readOnly": true
					}
				}
			},
			"AbstractLabelizedDto": {
				"type": "object",
				"required": [
					"code"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractLongIdDto"
					},
					{
						"properties": {
							"code": {
								"type": "string",
								"maxLength": 30
							},
							"label": {
								"type": "string",
								"maxLength": 100
							}
						}
					}
				]
			},
			"AbstractStampedDto": {
				"type": "object",
				"required": [
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractLabelizedDto"
					},
					{
						"properties": {
							"opening_date": {
								"$ref": "#/components/schemas/RudiDate"
							},
							"closing_date": {
								"$ref": "#/components/schemas/RudiDate"
							},
							"order": {
								"type": "integer",
								"description": "Ordre d'affichage dans l'interface"
							}
						}
					}
				]
			},
			"Provider": {
				"description": "Modèle producteur de jeux de données",
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid"
					},
					"code": {
						"type": "string",
						"description": "Code producteur unique"
					},
					"label": {
						"type": "string",
						"description": "Nom du producteur"
					},
					"openingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date de début d'activité"
					},
					"closingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date de fin d'activité"
					},
					"addresses": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AbstractAddress"
						}
					},
					"nodeProviders": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NodeProvider"
						}
					},
					"linkedProducers": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LinkedProducer"
						}
					}
				}
			},
			"AddressType": {
				"description": "Type d'adresse (postale, téléphonique, courriel, site)",
				"type": "string",
				"enum": [
					"POSTAL",
					"PHONE",
					"EMAIL",
					"WEBSITE"
				]
			},
			"AbstractAddress": {
				"discriminator": {
					"propertyName": "type",
					"mapping": {
						"PHONE": "#/components/schemas/TelephoneAddress",
						"WEBSITE": "#/components/schemas/WebsiteAddress",
						"EMAIL": "#/components/schemas/EmailAddress",
						"POSTAL": "#/components/schemas/PostalAddress"
					}
				},
				"description": "Adresse abstraite d'un producteur de données",
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid"
					},
					"type": {
						"$ref": "#/components/schemas/AddressType",
						"required": "true"
					},
					"addressRole": {
						"$ref": "#/components/schemas/AddressRole"
					}
				}
			},
			"AddressRole": {
				"description": "Rôle d'une adresse",
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid"
					},
					"code": {
						"type": "string",
						"description": "Code rôle adresse unique"
					},
					"label": {
						"type": "string",
						"description": "Libelle de l'adresse"
					},
					"type": {
						"$ref": "#/components/schemas/AddressType"
					},
					"openingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date de début d'activité"
					},
					"closingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date de fin d'activité"
					},
					"order": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"OrganizationStatus": {
				"description": "Statut représentant l'état de création de l'orgnization",
				"enum": [
					"DRAFT",
					"IN_PROGRESS",
					"CANCELLED",
					"VALIDATED",
					"DISENGAGED"
				]
			},
			"Organization": {
				"description": "Organisation",
				"type": "object",
				"required": [
					"name",
					"description"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/AssetDescription"
					},
					{
						"properties": {
							"name": {
								"description": "Nom",
								"type": "string"
							},
							"organizationStatus": {
								"$ref": "#/components/schemas/OrganizationStatus"
							},
							"openingDate": {
								"type": "string",
								"format": "date-time",
								"description": "Date de début d'activité"
							},
							"closingDate": {
								"type": "string",
								"format": "date-time",
								"description": "Une date de fin d'activité"
							},
							"description": {
								"type": "string"
							},
							"url": {
								"type": "string"
							},
							"address": {
								"type": "string"
							},
							"position": {
								"$ref": "./rudi-strukture-geojson.json#/components/schemas/GeoJsonObject"
							}
						}
					}
				]
			},
			"OrganizationActiveParam": {
				"description": "true si on souhaite obtenir uniquement les organisations qui n'ont pas de closing_date",
				"type": "boolean"
			},
			"OrganizationMember": {
				"description": "Membre d'une organisation",
				"type": "object",
				"required": [
					"role"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractLongIdDto"
					},
					{
						"properties": {
							"user_uuid": {
								"description": "UUID de l'utilisateur dans ACL",
								"type": "string",
								"format": "uuid"
							},
							"login": {
								"description": "Login de l'utilisateur dans ACL",
								"type": "string"
							},
							"role": {
								"$ref": "#/components/schemas/OrganizationRole"
							},
							"added_date": {
								"description": "Date d'ajout du membre dans l'organisation",
								"type": "string",
								"format": "date-time"
							}
						}
					}
				]
			},
			"OrganizationUserMember": {
				"description": "Membre d'une organisation avec des informations croisées avec son utilisateur",
				"type": "object",
				"required": [
					"user_uuid",
					"role"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/OrganizationMember"
					},
					{
						"properties": {
							"firstname": {
								"description": "Prénom du membre",
								"type": "string"
							},
							"lastname": {
								"description": "Nom de famille du membre",
								"type": "string"
							},
							"login": {
								"description": "Login (email) du membre",
								"type": "string"
							},
							"last_connexion": {
								"description": "Date de la dernière connexion",
								"type": "string",
								"format": "date-time"
							}
						}
					}
				]
			},
			"OrganizationMemberType": {
				"description": "Type du membre (utilisateur robot de l'organisation ou membre physique et morale)",
				"type": "string",
				"enum": [
					"PERSON",
					"ROBOT"
				]
			},
			"OrganizationNameParam": {
				"description": "Tout ou partie du nom d'une organisation",
				"type": "string"
			},
			"TextParam": {
				"description": "Tout ou partie du nom, du prenom ou du login du membre",
				"type": "string"
			},
			"OrganizationRole": {
				"description": "Rôle dans une organisation",
				"type": "string",
				"enum": [
					"EDITOR",
					"ADMINISTRATOR"
				]
			},
			"OrganizationRoleParam": {
				"description": "Rôle dans une organisation",
				"type": "string",
				"enum": [
					"EDITOR",
					"ADMINISTRATOR"
				]
			},
			"OrganizationUuidParam": {
				"description": "UUID d'une organisation",
				"type": "string",
				"format": "uuid"
			},
			"OrganizationUserUuidParam": {
				"description": "UUID d'un membre de l'organisation (tous rôles confondus)",
				"type": "string",
				"format": "uuid"
			},
			"OrganizationSearchCriteria": {
				"description": "Critère de recherche d'organisations",
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/SearchCriteria"
					},
					{
						"properties": {
							"uuid": {
								"$ref": "#/components/schemas/OrganizationUuidParam"
							},
							"name": {
								"$ref": "#/components/schemas/OrganizationNameParam"
							},
							"active": {
								"$ref": "#/components/schemas/OrganizationActiveParam"
							},
							"user_uuid": {
								"$ref": "#/components/schemas/OrganizationUserUuidParam"
							},
							"organization_status": {
								"$ref": "#/components/schemas/OrganizationStatus"
							},
							"load_all_informations": {
								"description": "Utilisé dans le cadre des organizationBean pour savoir si l'on charge l'ensemble des informations",
								"type": "boolean"
							}
						}
					}
				]
			},
			"PagedList": {
				"description": "Liste paginée d'éléments",
				"type": "object",
				"required": [
					"total",
					"elements"
				],
				"properties": {
					"total": {
						"description": "Nombre total d'éléments pour cette recherche (peut être supérieur au nombre d'éléments de la page courante)",
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"PagedOrganizationList": {
				"description": "Liste paginée d'organisations",
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/PagedList"
					},
					{
						"properties": {
							"elements": {
								"description": "Organisations de la page courante pour cette recherche",
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Organization"
								}
							}
						}
					}
				]
			},
			"PagedOrganizationUserMembers": {
				"description": "Liste paginée des membres d'une organisation enrichis par leur données utilisateur",
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/PagedList"
					},
					{
						"properties": {
							"elements": {
								"description": "Membres d'organisation de la page courante pour cette recherche",
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/OrganizationUserMember"
								}
							}
						}
					}
				]
			},
			"PostalAddress": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractAddress"
					},
					{
						"properties": {
							"recipientIdentification": {
								"type": "string",
								"description": "Identification du destinataire"
							},
							"additionalIdentification": {
								"type": "string",
								"description": "Complément d’identification ou point de remise à l’intérieur du bâtiment "
							},
							"streetNumber": {
								"type": "string",
								"description": "Numéro et libellé de la voie"
							},
							"distributionService": {
								"type": "string",
								"description": "Lieu dit ou service particulier de distribution"
							},
							"locality": {
								"type": "string",
								"description": "Code postal et localité de destination"
							}
						}
					}
				]
			},
			"SearchCriteria": {
				"description": "Critère de recherche",
				"type": "object",
				"properties": {
					"offset": {
						"description": "Index de début (positionne le curseur pour parcourir les résultats de la recherche)",
						"type": "integer",
						"format": "int32"
					},
					"limit": {
						"description": "Le nombre de résultats à retourner par page",
						"type": "integer",
						"format": "int32"
					},
					"order": {
						"description": "Le critère de tri des résultats",
						"type": "string"
					}
				}
			},
			"TelephoneAddress": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractAddress"
					},
					{
						"properties": {
							"phoneNumber": {
								"type": "string",
								"description": "Numéro de téléphone"
							}
						}
					}
				]
			},
			"EmailAddress": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractAddress"
					},
					{
						"properties": {
							"email": {
								"type": "string",
								"description": "Adresse email"
							}
						}
					}
				]
			},
			"WebsiteAddress": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AbstractAddress"
					},
					{
						"properties": {
							"url": {
								"type": "string",
								"description": "URL du site web"
							}
						}
					}
				]
			},
			"NodeProvider": {
				"description": "Noeud producteur",
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid",
						"description": "UUID du noeud"
					},
					"version": {
						"type": "string",
						"description": "Version de l'API utilisé"
					},
					"url": {
						"type": "string",
						"description": "URL du noeud"
					},
					"openingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date de début d'activité"
					},
					"closingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Une date de fin d'activité"
					},
					"harvestable": {
						"type": "boolean"
					},
					"notifiable": {
						"type": "boolean"
					},
					"harvestingCron": {
						"type": "string",
						"description": "Expression cron au format Spring pour planifier le moissonnage de ce nœud (cf : https://spring.io/blog/2020/11/10/new-in-spring-5-3-improved-cron-expressions)"
					},
					"lastHarvestingDate": {
						"type": "string",
						"format": "date-time",
						"description": "Date et heure du dernier moissonnage réussi"
					}
				}
			},
			"PageResult": {
				"type": "object",
				"properties": {
					"total": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"ProviderPageResult": {
				"allOf": [
					{
						"$ref": "#/components/schemas/PageResult"
					},
					{
						"type": "object",
						"properties": {
							"elements": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Provider"
								}
							}
						}
					}
				]
			},
			"RudiDate": {
				"description": "Date in the ISO 8601 format",
				"type": "string",
				"format": "date-time"
			},
			"PasswordUpdate": {
				"description": "Informations nécessaires pour modifier le mot-de-passe d'un compte",
				"type": "object",
				"properties": {
					"oldPassword": {
						"description": "L'ancien mot de passe",
						"type": "string"
					},
					"newPassword": {
						"description": "Le nouveau mot-de-passe",
						"type": "string"
					}
				}
			},
			"OrganizationBean": {
				"description": "Organisation",
				"type": "object",
				"properties": {
					"uuid": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"datasetCount": {
						"type": "integer"
					},
					"projectCount": {
						"type": "integer"
					}
				}
			},
			"PagedOrganizationBeanList": {
				"description": "Liste paginée d'organisationsBeans",
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/PagedList"
					},
					{
						"properties": {
							"elements": {
								"description": "Organisations de la page courante pour cette recherche",
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/OrganizationBean"
								}
							}
						}
					}
				]
			},
			"AssetDescription": {
				"type": "object",
				"properties": {
					"object_type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "object_type",
					"mapping": {
						"Organization": "#/components/schemas/Organization",
						"LinkedProducer": "#/components/schemas/LinkedProducer"
					}
				}
			},
			"IntegrationStatus": {
				"type": "string",
				"enum": [
					"OK",
					"KO"
				]
			},
			"Method": {
				"type": "string",
				"enum": [
					"POST",
					"PUT",
					"DELETE",
					"ATTACH",
					"DETACH"
				]
			},
			"ReportError": {
				"type": "object",
				"properties": {
					"error_code": {
						"type": "string"
					},
					"error_message": {
						"type": "string"
					}
				}
			},
			"Report": {
				"type": "object",
				"properties": {
					"report_id": {
						"type": "string",
						"format": "uuid"
					},
					"submission_date": {
						"type": "string",
						"format": "date-time"
					},
					"treatment_date": {
						"type": "string",
						"format": "date-time"
					},
					"method": {
						"$ref": "#/components/schemas/Method"
					},
					"version": {
						"type": "string"
					},
					"resource_id": {
						"type": "string",
						"format": "uuid"
					},
					"resource_title": {
						"type": "string"
					},
					"integration_status": {
						"$ref": "#/components/schemas/IntegrationStatus"
					},
					"comment": {
						"type": "string"
					},
					"integration_errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ReportError"
						}
					}
				}
			},
			"LinkedProducerStatus": {
				"description": "Statut représentant l'état de création de l'orgnization",
				"enum": [
					"DRAFT",
					"IN_PROGRESS",
					"CANCELLED",
					"VALIDATED",
					"DISENGAGED"
				]
			},
			"LinkedProducer": {
				"description": "Lien entre un Provider et un Producer",
				"type": "object",
				"required": [
					"openingDate",
					"description"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/AssetDescription"
					},
					{
						"properties": {
							"organization": {
								"$ref": "#/components/schemas/Organization"
							},
							"linked_producer_status": {
								"$ref": "#/components/schemas/LinkedProducerStatus"
							}
						}
					}
				]
			},
			"OwnerInfo": {
				"description": "Information du owner",
				"type": "object",
				"allOf": [
					{
						"properties": {
							"name": {
								"description": "Nom",
								"type": "string"
							},
							"contact": {
								"description": "Contact",
								"type": "string"
							},
							"ownerType": {
								"$ref": "#/components/schemas/OwnerType"
							}
						}
					}
				]
			},
			"OwnerType": {
				"description": "Type du Owner.",
				"type": "string",
				"enum": [
					"USER",
					"ORGANIZATION"
				]
			},
			"AllowedAttachementType": {
				"type": "object",
				"description": "Type de fichier accepté pour les logo et extension associée",
				"properties": {
					"mediaType": {
						"type": "string"
					},
					"associatedExtensions": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"OrganizationLogoInformations": {
				"type": "object",
				"description": "Type de fichier accepté pour les logo, extension associée et max size",
				"properties": {
					"maxSize": {
						"type": "integer"
					},
					"types": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AllowedAttachementType"
						}
					}
				}
			},
			"organization_date": {
				"type": "object",
				"properties": {
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"modified":  {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"NodeOrganization": {
				"description": "Organisation",
				"type": "object",
				"required": [
					"organization_id",
					"organization_name"
				],
				"properties": {
					"organization_id": {
						"description": "UUID de l'organisation",
						"type": "string",
						"format": "uuid"
					},
					"organization_name": {
						"description": "Nom complet de l'organisation",
						"type": "string"
					},
					"organization_status": {
						"$ref": "#/components/schemas/OrganizationStatus"
					},
					"organization_opening_date": {
						"type": "string",
						"format": "date-time",
						"description": "Date de début d'activité - si non renseigné à la création prend la timestamp de l'instant de création"
					},
					"organization_closing_date": {
						"type": "string",
						"format": "date-time",
						"description": "Une date de fin d'activité"
					},
					"organization_summary": {
						"type": "string"
					},
					"organization_url": {
						"type": "string"
					},
					"organization_address": {
						"type": "string"
					},
					"organization_dates": {
						"$ref": "#/components/schemas/organization_date"
					},
					"organization_coordinates": {
						"$ref": "./rudi-strukture-geojson.json#/components/schemas/GeoJsonObject"
					}
				}
			},
			"OrganizationFormType": {
				"description": "Le type de formulaire",
				"type": "string",
				"enum": [
					"DRAFT",
					"DRAFT_ARCHIVE"
				]
			}
		}
	}
}
