{
	"openapi": "3.0.0",
	"info": {
		"description": "API Public Strukture Rudi",
		"version": "0.0.1",
		"title": "rudi-strukture-api",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "contact@rudi.fr"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "/{basePath}",
			"description": "Rudi Strukture API",
			"variables": {
				"basePath": {
					"default": "strukture/v1"
				}
			}
		}
	],
	"tags": [
		{
			"name": "administration",
			"description": "Services d'administration"
		},
		{
			"name": "strukture",
			"description": "Services Strukture"
		},
		{
			"name": "providers",
			"description": "Services Providers"
		},
		{
			"name": "producers",
			"description": "Services Producers"
		},
		{
			"name": "organization",
			"description": "Services Organization"
		},
		{
			"name": "miscellaneous",
			"description": "Services divers"
		},
		{
			"name": "task",
			"description": "Services de gestion de tâches"
		},
		{
			"name": "linked-producer",
			"description": "Service de gestion du rattachement d'un producer à un provider"
		}
	],
	"paths": {
		"/application-information": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Récupération de la version applicative",
				"description": "Récupération d'information sur la version de l'application",
				"operationId": "getApplicationInformation",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppInfo"
								}
							}
						}
					}
				}
			}
		},
		"/healthCheck": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Test de vie de l'application'",
				"description": "Test de vie de l'application",
				"operationId": "checkHealth",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/providers": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection de fournisseurs",
				"description": "Retourne une liste de fournisseurs",
				"operationId": "searchProviders",
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"description": "Tout ou partie d'un code de fournisseur",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "libelle",
						"description": "Tout ou partie d'un libellé de fournisseur",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateDebut",
						"description": "Date de debut d'activité",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "dateFin",
						"description": "Date de fin d'activité",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "nodeProviderUuids",
						"description": "UUID d'un nom fournisseur",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "organizationUuids",
						"description": "UUID d'une organisation liée",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "full",
						"description": "Permet d'indiquer si l'on souhaite récupérer les noeuds et les adresses",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"description": "liste des tris à réaliser. Exemple :  code,-libelle"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/ProviderPageResult"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'un nouveau fournisseur",
				"description": "Permet d'ajouter un nouveau fournisseur",
				"operationId": "createProvider",
				"requestBody": {
					"description": "info fournisseur",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/Provider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'un fournisseur",
				"description": "Mise à jour d'un fournisseur",
				"operationId": "updateProvider",
				"requestBody": {
					"description": "info fournisseur",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/Provider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne un fournisseur",
				"description": "Retourne un fournisseur",
				"operationId": "getProvider",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid pour la récupération d'un element",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "full",
						"description": "Permet d'indiquer si l'on souhaite récupérer les noeuds et les adresses",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un fournisseur",
				"description": "Suppression d'un fournisseur",
				"operationId": "deleteProvider",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "info uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/addresses": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection d'adresses",
				"description": "Collection d'adresses",
				"operationId": "getAddresses",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'une adresse",
				"description": "Ajout d'une adresse",
				"operationId": "createAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info address",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'une adresse",
				"description": "Mise à jour d'une adresse",
				"operationId": "updateAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info address",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/addresses/{addressUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne une adresse",
				"description": "Retourne une adresse",
				"operationId": "getAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressUuid",
						"in": "path",
						"description": "uuid to get address",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'une adresse",
				"description": "Suppression d'une adresse",
				"operationId": "deleteAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressUuid",
						"in": "path",
						"description": "uuid address",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/nodes": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection de noeuds",
				"description": "Retourne une collection de noeuds",
				"operationId": "getNodes",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'un noeud",
				"description": "Ajout d'un noeud",
				"operationId": "createNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info node",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'un noeud",
				"description": "Mise à jour d'un noeud",
				"operationId": "updateNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info node",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/nodes/{nodeUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne un noeud",
				"description": "Retourne un noeud",
				"operationId": "getNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "uuid node",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un noeud",
				"description": "Suppression d'un noeud",
				"operationId": "deleteNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "uuid noeud",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Le fournisseur est inconnu."
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"providers"
				],
				"summary": "Change la date du dernier moissonnage réussi du nœud fournisseur",
				"description": "Change la date du dernier moissonnage réussi du nœud fournisseur",
				"operationId": "patchNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "UUID du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "UUID du nœud fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "lastHarvestingDate",
						"in": "query",
						"description": "Date du dernier moissonnage réussi",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/RudiDate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/media/{kindOfData}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Téléchargement du média d'un fournisseur",
				"description": "Retourne le média du fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "downloadProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le logo du fournisseur",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout ou modification d'un média pour un fournisseur",
				"description": "Upload le média du fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "uploadProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"requestBody": {
					"content": {
						"application/octet-stream": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le média du fournisseur a été créé ou mis à jour avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un média pour un fournisseur",
				"description": "Supprime le média d'un fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "deleteProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"204": {
						"description": "Le média du fournisseur a été supprimé avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			}
		},
		"/producers/{producerUuid}/media/{kindOfData}": {
			"get": {
				"tags": [
					"producers"
				],
				"summary": "Téléchargement du média d'un producteur",
				"description": "Retourne le média du producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "downloadProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le logo du producteur",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"producers"
				],
				"summary": "Ajout ou modification d'un média pour un producteur",
				"description": "Upload le média d'un producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "uploadProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le média du producteur a été créé ou mis à jour avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			},
			"delete": {
				"tags": [
					"producers"
				],
				"summary": "Suppression d'un média pour un producteur",
				"description": "Supprime le média d'un producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "deleteProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"204": {
						"description": "Le média du producteur a été supprimé avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			}
		},
		"/addressRoles": {
			"get": {
				"tags": [
					"strukture"
				],
				"summary": "Collection de role",
				"description": "Retourne une liste de role",
				"operationId": "searchAddressRoles",
				"parameters": [
					{
						"in": "query",
						"name": "active",
						"description": "Elements actif ou tous",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "type",
						"description": "Type du rôle",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/AddressType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"strukture"
				],
				"summary": "Ajout d'un nouveau role",
				"description": "Permet d'ajouter un nouveau role",
				"operationId": "createAddressRole",
				"requestBody": {
					"description": "info role",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"strukture"
				],
				"summary": "Mise à jour d'un role",
				"description": "Mise à jour d'un role",
				"operationId": "updateAddressRole",
				"requestBody": {
					"description": "info role",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/addressRoles/{uuid}": {
			"get": {
				"tags": [
					"strukture"
				],
				"summary": "Retourne un role",
				"description": "Retourne un role",
				"operationId": "getAddressRole",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "uuid role",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"strukture"
				],
				"summary": "Suppression d'un role",
				"description": "Suppression d'un role",
				"operationId": "deleteAddressRole",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "uuid role",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/organizations": {
			"post": {
				"tags": [
					"organization"
				],
				"summary": "Création d'une organisation",
				"description": "Permet de créer une organisation",
				"operationId": "createOrganization",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/Organization"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Organisation créée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/Organization"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Collection d'organisations",
				"description": "Retourne une liste d'organisations",
				"operationId": "searchOrganizations",
				"parameters": [
					{
						"in": "query",
						"name": "uuid",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationUuidParam"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationNameParam"
						}
					},
					{
						"in": "query",
						"name": "active",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationActiveParam"
						}
					},
					{
						"in": "query",
						"name": "user_uuid",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationUserUuidParam"
						}
					},
					{
						"in": "query",
						"name": "organization_status",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationStatus"
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/PagedOrganizationList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"put": {
				"tags": [
					"organization"
				],
				"summary": "Mise à jour d'une organisation",
				"description": "Mise à jour d'une organisation",
				"operationId": "updateOrganization",
				"requestBody": {
					"description": "infos de l'organisation",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/Organization"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Organisation modifiée avec succès"
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/{uuid}": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Récupère une organisation",
				"description": "Récupère une organisation donnée via son UUID",
				"operationId": "getOrganization",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/Organization"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/organizations/{uuid}/owner-info": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Donne à partir de l'Uuid d'une organisation, les informations du owner ayant fait la demande",
				"description": "Donne à partir de l'Uuid d'une organisation, les informations du owner ayant fait la demande",
				"operationId": "getOrganizationOwnerInfo",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID de l'organisation recherchée",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./rudi-strukture-model.json#/components/schemas/OwnerInfo"
								}
							}
						}
					}
				}
			}
		},
		"/organizations/{organizationUuid}/is-administrator": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Vérifie si l'utilisateur connecté est membre administrateur de l'organisation",
				"description": "Vérifie si l'utilisateur connecté est membre administrateur de l'organisation",
				"operationId": "isAuthenticatedUserOrganizationAdministrator",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Si l'utilisateur connecté est administrateur de l'organisation",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/{organizationUuid}/members": {
			"post": {
				"tags": [
					"organization"
				],
				"summary": "Ajout d'un membre à une organisation",
				"description": "Permet d'ajouter un membre à une organisation",
				"operationId": "addOrganizationMember",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "Informations sur le membre",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMember"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Membre ajouté à l'organisation avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMember"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Liste les membres d'une organisation",
				"description": "Liste les membres d'une organisation",
				"operationId": "getOrganizationMembers",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Liste des membres de l'organisation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMember"
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/{organizationUuid}/members/{userUuid}": {
			"delete": {
				"tags": [
					"organization"
				],
				"summary": "Retire un membre d'une organisation",
				"description": "Retire un membre d'une organisation",
				"operationId": "removeOrganizationMember",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "userUuid",
						"description": "L'UUID de l'utilisateur dans ACL",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Membre retiré de l'organisation avec succès"
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"put": {
				"tags": [
					"organization"
				],
				"summary": "Modifie un membre d'une organisation",
				"description": "Modifie un membre d'une organisation",
				"operationId": "updateOrganizationMember",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "userUuid",
						"description": "L'UUID de l'utilisateur dans ACL",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "infos de l'organization member",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMember"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "L'utilisateur a été correctement modifié",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMember"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/{organizationUuid}/user-members": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Recherche des membres d'une organisation",
				"description": "Recherche des membres d'une organisation",
				"operationId": "searchOrganizationUserMembers",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"required": true,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationUuidParam"
						}
					},
					{
						"in": "query",
						"name": "search_text",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/TextParam"
						}
					},
					{
						"in": "query",
						"name": "member_type",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationMemberType"
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "Liste des membres de l'organisation enrichi par leur données utilisateurs",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/PagedOrganizationUserMembers"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/{organizationUuid}/user": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Récupère l'utilisateur correspondant à une organisation.",
				"description": "Récupère l'utilisateur correspondant à une organisation. La correspondance se fait entre le login de l'utilisateur et l'UUID de l'organisation.",
				"operationId": "getOrganizationUserFromOrganizationUuid",
				"parameters": [
					{
						"in": "path",
						"name": "organizationUuid",
						"description": "L'UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "L'utilisateur correspondant à l'organisation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "../../../rudi-facet/rudi-facet-acl/openapi/rudi-acl-model.json#/components/schemas/User"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organization-beans": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Collection d'organisations-beans",
				"description": "Retourne une liste d'organisations",
				"operationId": "searchOrganizationsBeans",
				"parameters": [
					{
						"in": "query",
						"description": "user lié aux organizations",
						"name": "user_uuid",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationUserUuidParam"
						}
					},
					{
						"in": "query",
						"name": "organization_status",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationStatus"
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/PagedOrganizationBeanList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Recherche des tâches",
				"description": "Recherche des tâches",
				"operationId": "searchTasks",
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"description": "Nom de la tâche",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "description",
						"description": "Description de la tâche",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "process-definition-keys",
						"description": "Type du processus",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "status",
						"description": "etat de la tâche",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Status"
							}
						}
					},
					{
						"in": "query",
						"name": "fonctional-status",
						"description": "Etat fonctionnel",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "organization-status",
						"description": "etat de la tâche",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationStatus"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"description": "En tant qu'admin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "organization-uuid",
						"description": "UUID de l'Organization pour filtrer les tâches",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks/{task-id}": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement d'une tâche",
				"description": "Chargement d'une tâche",
				"operationId": "getTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks/my-historics": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique des tâches d'un utilisateur connecté",
				"description": "Récupération de l'historique des tâches d'un utilisateur connecté",
				"operationId": "getMyHistoricInformations",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/draft-form": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement de formulaire draft s'il existe",
				"description": "Chargement de formulaire draft s'il existe",
				"operationId": "lookupOrganizationDraftForm",
				"parameters": [
					{
						"in": "query",
						"name": "form-type",
						"description": "Le type du formulaire draft",
						"required": false,
						"schema": {
							"$ref": "rudi-strukture-model.json#/components/schemas/OrganizationFormType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/{task-id}/claim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Claim d'une tâche",
				"description": "Claim d'une tâche",
				"operationId": "claimOrganizationTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/{task-id}/unclaim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Unclaim d'une tâche",
				"description": "Unclaim d'une tâche",
				"operationId": "unclaimOrganizationTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/{task-id}/do-it/{action-name}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Fait avancer la tâche",
				"description": "Fait avancer la tâche à partir d'une action",
				"operationId": "doItOrganization",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "action-name",
						"description": "Nom de l'action à réaliser",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Mets à jour une tâche",
				"description": "Mets à jour une tâche et l'asset associée",
				"operationId": "updateOrganizationTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"task"
				],
				"summary": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"description": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"operationId": "createOrganizationDraft",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/Organization"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/start": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Démarre la tâche",
				"description": "Démarre la tâche",
				"operationId": "startOrganizationTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/tasks/{task-id}/historic": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique d'une tâche (asset + tâche)",
				"description": "Récupération de l'historique d'une tâche (asset + tâche)",
				"operationId": "getOrganizationTaskHistoryByTaskId",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/organizations/request": {
			"post": {
				"tags": [
					"organization"
				],
				"summary": "Demande de création d'une nouvelle organisation",
				"description": "Demande de création d'une nouvelle organisation avec validation par le moderateur",
				"operationId": "requestOrganizationCreation",
				"requestBody": {
					"description": "infos de l'organisation",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/NodeOrganization"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Demande de création d'Organisation créée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"description": "Une organisation possédant cet UUID existe déjà.",
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"put": {
				"tags": [
					"organization"
				],
				"summary": "Demande de modification d'une organisation",
				"description": "Demande de modification d'une organisation avec validation par le moderateur",
				"operationId": "requestOrganizationUpdate",
				"requestBody": {
					"description": "Données de l'organisation",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/NodeOrganization"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Demande de modification d'Organisation créée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"description": "Aucune organisation possédant cet UUID existe.",
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/organizations/request/{uuid}": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Récupère une organisation",
				"description": "Récupère une organisation donnée via son UUID",
				"operationId": "getNodeOrganization",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-strukture-model.json#/components/schemas/NodeOrganization"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"organization"
				],
				"summary": "Supprime une organisation",
				"description": "Supprime une organisation via son UUID",
				"operationId": "requestOrganizationDelete",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Organisation supprimée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/request/{uuid}": {
			"get": {
				"tags": [
					"linked-producers"
				],
				"summary": "Demande si l'organisation est rattaché au provider courant.",
				"description": "Demande si l'organisation est rattaché au provider courant.",
				"operationId": "isAttachedToProducer",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"description": "UUID de l'organization que l'on souhaite rattacher à son fournisseur.",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"linked-producers"
				],
				"summary": "Demande de rattachement d'une organisation à un provider",
				"description": "Demande de rattachement d'une organisation à un provider.",
				"operationId": "attachProducer",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"description": "UUID de l'organization que l'on souhaite rattacher à son fournisseur.",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"linked-producers"
				],
				"summary": "Demande de détachement d'une organisation d'un provider",
				"description": "Demande de détachement d'une organisation d'un provider.",
				"operationId": "detachProducer",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"description": "UUID de l'organization que l'on souhaite détacher de son fournisseur.",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					}
				}
			}
		},
		"/linked-producers/{uuid}":{
			"get": {
				"tags": [
					"linked-producers"
				],
				"summary": "Demande de rattachement d'une organisation à un provider",
				"description": "Demande de rattachement d'une organisation à un provider.",
				"operationId": "getLinkedProducer",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID du producer link recherché",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./rudi-strukture-model.json#/components/schemas/LinkedProducer"
								}
							}
						}
					}
				}
			}
		},
		"/linked-producers/{uuid}/owner-info": {
			"get": {
				"tags": [
					"linked-producers"
				],
				"summary": "Donne à partir du linkedProducer Uuid, les informations du owner ayant fait la demande",
				"description": "Donne à partir du linkedProducer Uuid, les informations du owner ayant fait la demande",
				"operationId": "getLinkedProducerOwnerInfo",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID de linkedProducer recherché",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./rudi-strukture-model.json#/components/schemas/OwnerInfo"
								}
							}
						}
					}
				}
			}
		},
		"/linked-producers/tasks/draft-form": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement de formulaire draft s'il existe",
				"description": "Chargement de formulaire draft s'il existe",
				"operationId": "lookupLinkedProducerDraftForm",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks/{task-id}/claim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Claim d'une tâche",
				"description": "Claim d'une tâche",
				"operationId": "claimLinkedProducerTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks/{task-id}/unclaim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Unclaim d'une tâche",
				"description": "Unclaim d'une tâche",
				"operationId": "unclaimLinkedProducerTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks/{task-id}/do-it/{action-name}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Fait avancer la tâche",
				"description": "Fait avancer la tâche à partir d'une action",
				"operationId": "doItLinkedProducer",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "action-name",
						"description": "Nom de l'action à réaliser",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Mets à jour une tâche",
				"description": "Mets à jour une tâche et l'asset associée",
				"operationId": "updateLinkedProducerTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"task"
				],
				"summary": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"description": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"operationId": "createLinkedProducerDraft",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-strukture-model.json#/components/schemas/LinkedProducer"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks/start": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Démarre la tâche",
				"description": "Démarre la tâche",
				"operationId": "startLinkedProducerTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-producers/tasks/{task-id}/historic": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique d'une tâche (asset + tâche)",
				"description": "Récupération de l'historique d'une tâche (asset + tâche)",
				"operationId": "getLinkedProducerTaskHistoryByTaskId",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/attachments": {
			"post": {
				"tags": [
					"organization"
				],
				"summary": "Ajout d'une pièce-jointe.",
				"description": "Upload le contenu d'une pièce-jointe.",
				"operationId": "uploadAttachment",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "L'UUID de la pièce-jointe créée.",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/attachments/{uuid}": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Recupère les informations principales d'un fichier.",
				"description": "Recupère les informations principales d'un fichier. Il s'agit du nom et de la taille notamment",
				"operationId": "getAttachmentMetadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "UUID de la pièce-jointe.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Les informations basiques sur la pièce-jointe.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-doks/openapi/rudi-doks-model.json#/components/schemas/DocumentMetadata"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"organization"
				],
				"summary": "Supprime une pièce-jointe.",
				"description": "Supprime une pièce-jointe.",
				"operationId": "deleteAttachment",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "UUID de la pièce-jointe.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "La pièce-jointe a été supprimée avec succès."
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/attachments/{uuid}/content": {
			"get": {
				"tags": [
					"organization"
				],
				"summary": "Télécharge le contenu d'une pièce-jointe.",
				"description": "Télécharge le contenu d'une pièce-jointe.",
				"operationId": "downloadAttachment",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "UUID de la pièce-jointe.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Le contenu de la pièce-jointe.",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"LimitParam": {
				"in": "query",
				"name": "limit",
				"description": "Le nombre de résultats à retourner par page",
				"required": false,
				"schema": {
					"type": "integer",
					"format": "int32"
				}
			},
			"OffsetParam": {
				"in": "query",
				"name": "offset",
				"description": "Index de début (positionne le curseur pour parcourir les résultats de la recherche)",
				"required": false,
				"schema": {
					"type": "integer",
					"format": "int32"
				}
			},
			"OrderParam": {
				"in": "query",
				"name": "order",
				"required": false,
				"schema": {
					"type": "string"
				}
			}
		},
		"responses": {
			"InternalServerError": {
				"description": "Internal server error"
			},
			"BadRequestError": {
				"description": "Bad Request Error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"NotFound": {
				"description": "La ressource demandée est introuvable.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Unauthorized": {
				"description": "Unauthorized",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Forbidden": {
				"description": "Forbidden",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"NotAcceptable": {
				"description": "Not Acceptable",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"RequestTimeout": {
				"description": "Request Timeout",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"TooManyRequests": {
				"description": "Too Many Requests",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"ServiceUnavailable": {
				"description": "Service Unavailable"
			}
		},
		"schemas": {
			"ApiError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				}
			},
			"AppInfo": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Numéro de version de l'application"
					},
					"comment": {
						"type": "string",
						"description": "Description de la version de l'application"
					}
				}
			},
			"RudiDate": {
				"description": "Date in the ISO 8601 format",
				"type": "string",
				"format": "date-time"
			}
		}
	}
}
