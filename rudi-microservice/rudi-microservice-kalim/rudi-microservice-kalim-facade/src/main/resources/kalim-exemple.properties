# Surcharger les paramètres de "genius.properties"
server.port=8086

# répertoire temporaire
temporary.directory=${java.io.tmpdir}

rudi.kalim.scheduler.pool.size=2
rudi.kalim.scheduler.sendReport.delay=30000
rudi.kalim.scheduler.treatment.delay=30000

rudi.kalim.sendReport.retry=5
rudi.kalim.sendReport.period=3600

server.ssl.enabled=true|false
server.ssl.key-alias=...
server.ssl.key-store-password=...
server.ssl.key-password=...
server.ssl.key-store=classpath:...
server.ssl.key-store-type=PKCS12
#trust.store=classpath:${server.ssl.key-store}
#trust.store.password=${server.ssl.key-store-password}
trust.trust-all-certs=true|false

# Configuration BDD
##########################
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=...
spring.datasource.password=...
spring.jpa.show-sql=true

# Génération du script par hibernate + jpa
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none

# Configuration Eureka
##########################
eureka.client.serviceURL.defaultZone=http(s)://...:...@localhost:8761/eureka

eureka.instance.nonSecurePortEnabled=false
eureka.instance.securePortEnabled=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost

eureka.client.tls.enabled=${server.ssl.enabled}
eureka.client.tls.key-store=${server.ssl.key-store}
eureka.client.tls.key-store-type=${server.ssl.key-store-type}
eureka.client.tls.key-password=${server.ssl.key-password}
eureka.client.tls.key-store-password=${server.ssl.key-store-password}
eureka.client.tls.trust-store=${eureka.client.tls.key-store}
eureka.client.tls.trust-store-password=${eureka.client.tls.key-password}
eureka.client.tls.trust-store-type=${server.ssl.key-store-type}

# Configuration Security
##########################
module.oauth2.trust-all-certs=true|false
module.oauth2.provider-uri=http(s)://localhost:8085/oauth2/token
module.oauth2.check-token-uri=http(s)://localhost:8085/oauth2/check_token
module.oauth2.client-id=...
module.oauth2.client-secret=...
module.oauth2.scope=read,write

security.jwt.access.tokenKey=...

# Configuration Dataverse
##########################
dataverse.api.url=http://...:${dataverse.instance1.port}/api
dataverse.api.token=...
dataverse.api.rudi.data.alias=rudi_data
dataverse.api.rudi.archive.alias=rudi_archive

## Configuration EMail
##########################
mail.smtp.host=...
mail.smtp.port=1025
mail.from=mock@mock.fr

# Configuration Freemarker
##########################
# Conf locale de surcharge des templates de mail pour les devs (un repertoire quelque part sur la machine)
# bien mettre les mail dans un dossier "templates/lemail.txt"
freemarker.baseDirectory=/opt/rudi_tmp

# Configuration des properties pour les email
##########################
email.urlServer=http://...
email.urlContact=https://...
email.teamName=...
email.projectName=...
