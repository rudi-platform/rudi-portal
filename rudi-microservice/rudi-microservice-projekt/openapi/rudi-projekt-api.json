{
	"openapi": "3.0.0",
	"info": {
		"description": "API Public Projekt Rudi",
		"version": "0.0.1",
		"title": "rudi-projekt-api",
		"termsOfService": "https://swagger.io/terms/",
		"contact": {
			"email": "contact@rudi.fr"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "https://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "/{basePath}",
			"description": "Rudi Projekt API",
			"variables": {
				"basePath": {
					"default": "projekt/v1"
				}
			}
		}
	],
	"tags": [
		{
			"name": "administration",
			"description": "Services d'administration"
		},
		{
			"name": "projekt",
			"description": "Services Projekt"
		},
		{
			"name": "task",
			"description": "Services de gestion de tâches"
		},
		{
			"name": "miscellaneous",
			"description": "Services divers"
		},
		{
			"name": "linked-dataset",
			"description": "Service de gestion des linked datasets"
		}
	],
	"paths": {
		"/application-information": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Récupération de la version applicative",
				"description": "Récupération d'information sur la version de l'application",
				"operationId": "getApplicationInformation",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppInfo"
								}
							}
						}
					}
				}
			}
		},
		"/healthCheck": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Test de vie de l'application'",
				"description": "Test de vie de l'application",
				"operationId": "checkHealth",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/types": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un type de projet",
				"description": "Crée un type de projet",
				"operationId": "createProjectType",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ProjectType"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Type de projet créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ProjectType"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche de type de projet",
				"description": "Recherche de type de projet",
				"operationId": "searchProjectTypes",
				"parameters": [
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedProjectTypeList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/types/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un type de projet",
				"description": "Modifie un type de projet",
				"operationId": "updateProjectType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ProjectType"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Type de projet modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un type de projet donné",
				"description": "Récupère un type de projet donné via son UUID",
				"operationId": "getProjectType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ProjectType"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un type de projet",
				"description": "Supprime un type de projet via son UUID",
				"operationId": "deleteProjectType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Type de projet supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/confidentialities": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un niveau de confidentialité",
				"description": "Crée un niveau de confidentialité",
				"operationId": "createConfidentiality",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Confidentiality"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Niveau de confidentialité créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Confidentiality"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Liste tous les niveaux de confidentialité",
				"description": "Liste tous les niveaux de confidentialité",
				"operationId": "searchConfidentialities",
				"parameters": [
					{
						"in": "query",
						"name": "isPrivate",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedConfidentialityList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/confidentialities/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un niveau de confidentialité",
				"description": "Modifie un niveau de confidentialité",
				"operationId": "updateConfidentiality",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Confidentiality"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Niveau de confidentialité modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un niveau de confidentialité donné",
				"description": "Récupère un niveau de confidentialité donné via son UUID",
				"operationId": "getConfidentiality",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Confidentiality"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un niveau de confidentialité",
				"description": "Supprime un niveau de confidentialité",
				"operationId": "deleteConfidentiality",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Niveau de confidentialité supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/managers": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un porteur de projet",
				"description": "Crée un porteur de projet",
				"operationId": "createManager",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Manager"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Porteur de projet créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Manager"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Liste tous les porteur de projets",
				"description": "Liste tous les porteur de projets",
				"operationId": "searchManagers",
				"parameters": [
					{
						"in": "query",
						"name": "userUuid",
						"description": "UUID de l'utilisateur dans ACL",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedManagerList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/managers/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un porteur de projet",
				"description": "Modifie un porteur de projet",
				"operationId": "updateManager",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Manager"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Porteur de projet modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un porteur de projet donné",
				"description": "Récupère un porteur de projet donné via son UUID",
				"operationId": "getManager",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Manager"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un porteur de projet",
				"description": "Supprime un porteur de projet",
				"operationId": "deleteManager",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Porteur de projet supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un projet",
				"description": "Crée un projet",
				"operationId": "createProject",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Project"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Projet créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Project"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche de projets",
				"description": "Recherche de projets",
				"operationId": "searchProjects",
				"parameters": [
					{
						"in": "query",
						"name": "datasetUuids",
						"description": "UUIDs des jeux de données liés aux projets recherchés",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "linkedDatasetUuids",
						"description": "UUIDs des LinkedDatasetEntity (des demandes d'accès) liées aux projets recherchés",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "ownerUuids",
						"description": "UUIDs des utilisateurs ou des organisations ayant déclaré la réutilisation ou soumis le projet",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "projectUuids",
						"description": "UUIDs des projets",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ProjectStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "themes",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "keywords",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "targetAudiennces",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
							}
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedProjectList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/my-projects": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche de projets",
				"description": "Recherche de projets",
				"operationId": "getMyProjects",
				"parameters": [
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedProjectList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un projet",
				"description": "Modifie un projet",
				"operationId": "updateProject",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Project"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Projet modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un projet donné",
				"description": "Récupère un projet donné via son UUID",
				"operationId": "getProject",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Project"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un projet",
				"description": "Supprime un projet via son UUID",
				"operationId": "deleteProject",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Projet supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{project-uuid}/linked-datasets": {
			"description": "Consultation des jeux de données liés à un projet",
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Jeux de données d'un projet",
				"description": "Liste tous les jeux de données réutilisés par un projet.",
				"operationId": "getLinkedDatasets",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "query",
						"name": "status",
						"description": "Statut de la demande, optionnel. Si vide : récupération de tous les jeux de données",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDatasetStatus"
							}
						},
						"example": "DRAFT"
					}
				],
				"responses": {
					"200": {
						"description": "Jeux de données listés avec succès.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Ajoute un lien entre un projet et un jeu de données",
				"description": "Indique quel jeu de données est réutilisé par le projet ou en fait la demande pour un jdd restreint.",
				"operationId": "linkProjectToDataset",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le projet a été lié au jeu de données avec succès | La demande a été envoyée.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie une demande d'accès à un jdd",
				"description": "Modifie une demande d'accès à un jdd",
				"operationId": "updateLinkedDataset",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Jeu de données lié modifié avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{project-uuid}/linked-datasets/{linked-dataset-uuid}": {
			"description": "Consultation et suppresion des jeux de données liés à un projet",
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Un jeu de données d'un projet",
				"description": "Affiche un jdd réutilisé par un projet.",
				"operationId": "getLinkedDataset",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "linked-dataset-uuid",
						"description": "UUID du linked dataset",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					}
				],
				"responses": {
					"200": {
						"description": "Jeu de données lié affiché avec succès.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un lien entre un projet et un jeu de données",
				"description": "Indique que le jeu de données n'est plus réutilisé par le projet | ou la demande a été supprimée.",
				"operationId": "unlinkProjectToDataset",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "linked-dataset-uuid",
						"description": "UUID du linked dataset",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "53ac7c69-acd9-49c5-a74d-22647cf3e2e3"
					},
					{
						"in": "query",
						"name": "force",
						"description": "permet de forcer la suppression du linked-dataset",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Le lien entre le projet et le jeu de données a été supprimé avec succès."
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{project-uuid}/linked-datasets/{linked-dataset-uuid}/decision-informations": {
			"description": "Consultation du commentaire lié à l'acceptation ou au refus d'accès à un jeu de données lié à un projet",
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Les informations liées à une décision",
				"description": "Affiche la décision liée à un jeu de données",
				"operationId": "getDecisionInformationsForLinkedDataset",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "linked-dataset-uuid",
						"description": "UUID du linked dataset",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"204": {
						"description": "Aucun commentaire n'est renseigné"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{project-uuid}/indicators": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche des informations sur les autres demandes d'accès d'un projet",
				"description": "Recherche des informations sur les autres demandes d'accès qui ne concernent pas le producteur de données fourni pour un projet.",
				"operationId": "computeIndicators",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "excluded-producer-uuid",
						"description": "UUID du producteur de données dont on ne veut pas les infos sur les demandes d'accès",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Indicators"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{projectUuid}/new-dataset-requests": {
			"description": "Demandes de nouveaux jeux de données liées à un projet",
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée une demande de nouveau jeu de données",
				"description": "Crée une demande de nouveau jeu de données",
				"operationId": "createNewDatasetRequest",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Demande de nouveau jeu de données créée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Demandes de nouveaux jeux de données",
				"description": "Liste toutes les demandes de nouveaux jeux de données d'un projet.",
				"operationId": "getNewDatasetRequests",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					}
				],
				"responses": {
					"200": {
						"description": "Jeux de données listés avec succès.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie une demande de nouveau jeu de données",
				"description": "Modifie une demande de nouveau jeu de données",
				"operationId": "updateNewDatasetRequest",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Demande modifiée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{projectUuid}/new-dataset-requests/{requestUuid}": {
			"description": "Demande de nouveaux jeux de données liée à un projet",
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère une demande de nouveau jeu de données ciblée",
				"description": "Récupère une demande de nouveau jeu de données ciblée via son UUID",
				"operationId": "getNewDatasetRequestByUuid",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "requestUuid",
						"description": "UUID de la demande de nouveau jeu de données",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime une demande de nouveau jeu de données",
				"description": "Supprime une demande de nouveau jeu de données via son UUID",
				"operationId": "deleteNewDatasetRequest",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "requestUuid",
						"description": "UUID de la demande de nouveau jeu de données",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Demande de nouveau jeu de données supprimée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{project-uuid}/new-dataset-requests/{request-uuid}/decision-informations": {
			"description": "Consultation du commentaire lié à l'acceptation ou au refus de nouveau jeu de données lié à un projet",
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Les informations liées à une décision",
				"description": "Affiche la décision liée à une demande de jeu de données",
				"operationId": "getDecisionInformationsForNewRequest",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "request-uuid",
						"description": "UUID du new dataset request",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"204": {
						"description": "Aucun commentaire n'est renseigné"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/{uuid}/media/{kindOfData}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Téléchargement du média d'un projet",
				"description": "Retourne le média d'un projet, pour le type de média demandé (logo par exemple).",
				"operationId": "downloadProjectMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le média du projet",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Ajout ou modification d'un média pour un projet",
				"description": "Upload le média du projet, pour le type de média demandé (logo par exemple).",
				"operationId": "uploadProjectMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le média du projet a été créé ou mis à jour avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Suppression d'un média pour un projet",
				"description": "Supprime le média d'un projet, pour le type de média demandé (logo par exemple).",
				"operationId": "deleteProjectMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "./../../../rudi-facet/rudi-facet-kmedia/src/main/resources/openapi/rudi-kmedia-model.yml#/components/schemas/KindOfData"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"204": {
						"description": "Le média du projet a été supprimé avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			}
		},
		"/projects/{projectUuid}/number-of-datasets": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Nombre de jdd d'un projet",
				"description": "Retourne le nombre total de jdds rattachés au projet (restreint + ouvert + nouvelle demande).",
				"operationId": "getNumberOfRequests",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le nombre de jdds rattachés en integer",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "integer"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/projects/{projectUuid}/is-owner": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Détermine si l'utilisateur connecté est owner du projet ou non",
				"description": "Retourne true si l'utilisateur connecté est owner du projet, false sinon.",
				"operationId": "isAuthenticatedUserProjectOwner",
				"parameters": [
					{
						"in": "path",
						"name": "projectUuid",
						"description": "UUID du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Renvoie true si l'utilisateur connecté est owner du projet, false sinon.",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				}
			}
		},
		"/project-owners/has-task/{owner-uuid}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Détermine si une organisation a des projets en cours",
				"description": "Retourne true si l'organisation a des projets en cours, false sinon",
				"operationId": "hasProjectOwnerRunningTask",
				"parameters": [
					{
						"in": "path",
						"name": "owner-uuid",
						"description": "UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "True si l'organsiation possède des projets en cours",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/project-owners/{owner-uuid}/archive/{archive-mode}": {
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Permet l'archivage de l'ensemble des projects d'une organisation",
				"description": "Archive les projets d'une organisations ainsi que les linked datasets",
				"operationId": "archiveOwnerProjects",
				"parameters": [
					{
						"in": "path",
						"name": "owner-uuid",
						"description": "UUID du owner du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "archive-mode",
						"description": "archivage mode, gère le niveau d'archivage",
						"required": true,
						"schema": {
							"$ref":"./rudi-projekt-model.json#/components/schemas/ProjektArchiveMode"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Projets archivés avec succès."
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/properties/front-office": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Propriétés de configuration du Front Office",
				"description": "Toutes les propriétés sous forme de clé/valeur pour configurer l'application Front Office",
				"operationId": "getFrontOfficeProperties",
				"responses": {
					"200": {
						"description": "Propriétés au format JSON.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/FrontOfficeProperties"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/supports": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un type d’accompagnement",
				"description": "Crée un type d’accompagnement",
				"operationId": "createSupport",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Support"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Type d’accompagnement créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Support"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Liste tous les type d’accompagnements",
				"description": "Liste tous les type d’accompagnements",
				"operationId": "searchSupports",
				"parameters": [
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedSupportList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/supports/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un type d’accompagnement",
				"description": "Modifie un type d’accompagnement",
				"operationId": "updateSupport",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Support"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Type d’accompagnement modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un type d’accompagnement donné",
				"description": "Récupère un type d’accompagnement donné via son UUID",
				"operationId": "getSupport",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Support"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un type d’accompagnement",
				"description": "Supprime un type d’accompagnement via son UUID",
				"operationId": "deleteSupport",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Type d’accompagnement supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/territorial-scales": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée une échelle de territoire",
				"description": "Crée une échelle de territoire",
				"operationId": "createTerritorialScale",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TerritorialScale"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Échelle de territoire créée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/TerritorialScale"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche d'échelles de territoires",
				"description": "Recherche d'échelles de territoires",
				"operationId": "searchTerritorialScales",
				"parameters": [
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedTerritorialScaleList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/territorial-scales/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie une échelle de territoire",
				"description": "Modifie une échelle de territoire",
				"operationId": "updateTerritorialScale",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TerritorialScale"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Échelle de territoire modifiée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère une échelle de territoire donnée",
				"description": "Récupère une échelle de territoire donnée via son UUID",
				"operationId": "getTerritorialScale",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/TerritorialScale"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime une échelle de territoire",
				"description": "Supprime une échelle de territoire via son UUID",
				"operationId": "deleteTerritorialScale",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Échelle de territoire supprimée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/target-audience": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un nouveau public cible",
				"description": "Crée un public cible",
				"operationId": "createTargetAudience",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Public cible créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche de public cible",
				"description": "Recherche de public cible",
				"operationId": "searchTargetAudiences",
				"parameters": [
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedTargetAudienceList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un public cible",
				"description": "Modifie un public cible",
				"operationId": "updateTargetAudience",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Public cible modifié avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/target-audience/{uuid}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un public cible",
				"description": "Récupère un public cible donné via son UUID",
				"operationId": "getTargetAudience",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime un public cible",
				"description": "Supprime un public cible via son UUID",
				"operationId": "deleteTargetAudience",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Public cible supprimé avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/owner-info/{ownerType}/{ownerUuid}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Informations minimales sur un porteur de projet",
				"description": "Un porteur de projet peut être un utilisateur ou une organisation.",
				"operationId": "getOwnerInfo",
				"parameters": [
					{
						"name": "ownerType",
						"in": "path",
						"description": "Type du porteur de projet",
						"required": true,
						"schema": {
							"$ref": "rudi-projekt-model.json#/components/schemas/OwnerType"
						}
					},
					{
						"$ref": "#/components/parameters/OwnerUuidParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/OwnerInfo"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/owner-info/{uuidToCheck}/dataset-access/{datasetUuid}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Vérifie si un uuid a accès au jeu de données indiqué",
				"description": "Un uuid peut-être celui d'un utilisateur (porteur de projet) ou une organisation.",
				"operationId": "hasAccessToDataset",
				"parameters": [
					{
						"$ref": "#/components/parameters/UuidToCheck"
					},
					{
						"name": "datasetUuid",
						"in": "path",
						"description": "UUID du jeu de données dont on cherche à vérifier si l'accès est autorisé",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "b9887e0f-db4e-47f0-87cd-e2f7f8d80689"
					}
				],
				"responses": {
					"200": {
						"description": "True si l'uuid to check a accès au jeu de données",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/owner-info/{linkedDatasetUuid}": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Donne à partir du linkedDatasetUuid, le porteur de projet ayant fait la demande",
				"description": "Donne à partir du linkedDatasetUuid, le porteur de projet (personne ou organisation) ayant fait la demande",
				"operationId": "getLinkedDatasetOwner",
				"parameters": [
					{
						"name": "linkedDatasetUuid",
						"in": "path",
						"description": "UUID du linkedDataset associé au projet dont on veut le propriétaire",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "b9887e0f-db4e-47f0-87cd-e2f7f8d80689"
					}
				],
				"responses": {
					"200": {
						"description": "L'UUID du project owner",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/OwnerUuid"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/notify/organization/{organizationUuid}/member/{userUuid}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Notifier l'ajout d'un nouvel utilisateur dans une organisation",
				"description": "Notifier l'ajout d'un nouvel utilisateur dans une organisation pour lui donner les droits sur les tâches liées",
				"operationId": "handleAddOrganizationMember",
				"parameters": [
					{
						"name": "organizationUuid",
						"in": "path",
						"description": "UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userUuid",
						"in": "path",
						"description": "UUID de l'utilisateur ajouté",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"task"
				],
				"summary": "Notifier la suppression d'un utilisateur dans une organisation",
				"description": "Notifier la suppression d'un utilisateur dans une organisation pour supprimer ses droits sur les tâches liées",
				"operationId": "handleRemoveOrganizationMember",
				"parameters": [
					{
						"name": "organizationUuid",
						"in": "path",
						"description": "UUID de l'organisation",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "userUuid",
						"in": "path",
						"description": "UUID de l'utilisateur supprimé",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/process-definitions": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "List process definition",
				"description": "List process definition",
				"operationId": "searchProcessDefinitions",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessDefinition"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/process-definitions/{deployment-name}": {
			"put": {
				"tags": [
					"administration"
				],
				"summary": "Création ou mise à jour d'un processus",
				"description": "Création ou mise à jour d'un processus",
				"operationId": "updateProcessDefinition",
				"parameters": [
					{
						"in": "path",
						"name": "deployment-name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/xml": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/process-definitions/{process-definition-key}": {
			"delete": {
				"tags": [
					"administration"
				],
				"summary": "Supprime un processus",
				"description": "Supprime un processus",
				"operationId": "deleteProcessDefinition",
				"parameters": [
					{
						"in": "path",
						"name": "process-definition-key",
						"description": "Key du processus",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "version",
						"description": "Version du processus",
						"required": false,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Échelle de territoire supprimée avec succès"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Recherche des tâches",
				"description": "Recherche des tâches",
				"operationId": "searchTasks",
				"parameters": [
					{
						"in": "query",
						"name": "title",
						"description": "Titre de la tâche",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "description",
						"description": "Description de la tâche",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "process-definition-keys",
						"description": "Type du processus",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "status",
						"description": "etat de la tâche",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Status"
							}
						}
					},
					{
						"in": "query",
						"name": "fonctional-status",
						"description": "Etat fonctionnel",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "project-status",
						"description": "etat de la tâche",
						"required": false,
						"schema": {
							"$ref": "rudi-projekt-model.json#/components/schemas/ProjectStatus"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"description": "En tant qu'admin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "dataset-producer-uuid",
						"description": "UUID du producteur de données du jeu de données concerné par la demande d'accès",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "project-uuid",
						"description": "UUID du projet pour filtrer les tâches",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks/{task-id}": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement d'une tâche",
				"description": "Chargement d'une tâche",
				"operationId": "getTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/tasks/my-historics": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique des tâches d'un utilisateur connecté",
				"description": "Récupération de l'historique des tâches d'un utilisateur connecté",
				"operationId": "getMyHistoricInformations",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/draft-form": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement de formulaire draft par type s'il existe",
				"description": "Chargement de formulaire draft par type s'il existe",
				"operationId": "lookupProjectDraftForm",
				"parameters": [
					{
						"in": "query",
						"name": "form-type",
						"description": "Le type du formulaire draft",
						"required": false,
						"schema": {
							"$ref": "rudi-projekt-model.json#/components/schemas/ProjectFormType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/{task-id}": {
			"delete": {
				"tags": [
					"task"
				],
				"summary": "Suppression d'une tâche",
				"description": "Suppression d'une tâche",
				"operationId": "deleteProjectTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Tâche supprimée avec succès"
					}
				}
			}
		},
		"/projects/tasks/{task-id}/claim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Claim d'une tâche",
				"description": "Claim d'une tâche",
				"operationId": "claimProjectTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/{task-id}/unclaim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Unclaim d'une tâche",
				"description": "Unclaim d'une tâche",
				"operationId": "unclaimProjectTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/{task-id}/do-it/{action-name}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Fait avancer la tâche",
				"description": "Fait avancer la tâche à partir d'une action",
				"operationId": "doItProject",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "action-name",
						"description": "Nom de l'action à réaliser",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Mets à jour une tâche",
				"description": "Mets à jour une tâche et l'asset associée",
				"operationId": "updateProjectTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"task"
				],
				"summary": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"description": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"operationId": "createProjectDraft",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/Project"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/start": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Démarre la tâche",
				"description": "Démarre la tâche",
				"operationId": "startProjectTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/projects/tasks/{task-id}/historic": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique d'une tâche (asset + tâche)",
				"description": "Récupération de l'historique d'une tâche (asset + tâche)",
				"operationId": "getProjectTaskHistoryByTaskId",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/projects/count-per-owner": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Retourne le nombre de projects par owner",
				"description": "Recherche de statut de réutilisation",
				"operationId": "getNumberOfProjectsPerOwners",
				"parameters": [
					{
						"in": "query",
						"name": "datasetUuids",
						"description": "UUIDs des jeux de données liés aux projets recherchés",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "linkedDatasetUuids",
						"description": "UUIDs des LinkedDatasetEntity (des demandes d'accès) liées aux projets recherchés",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "ownerUuids",
						"description": "UUIDs des utilisateurs ou des organisations ayant déclaré la réutilisation ou soumis le projet",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "projectUuids",
						"description": "UUIDs des projets",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ProjectStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "themes",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "keywords",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "targetAudiennces",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "rudi-projekt-model.json#/components/schemas/TargetAudience"
							}
						}
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ProjectByOwners"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/new-dataset-request/{new-dataset-request-uuid}/project": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche le projet associé à une nouvelle demande",
				"description": "Recherche le projet associé à une nouvelle demande à partir de son task-id",
				"operationId": "findProjectByNewDatasetRequest",
				"parameters": [
					{
						"in": "path",
						"name": "new-dataset-request-uuid",
						"description": "Uuid de l'asset",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/Project"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/linked-dataset/tasks/draft-form": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement de formulaire draft s'il existe",
				"description": "Chargement de formulaire draft s'il existe",
				"operationId": "lookupLinkedDatasetDraftForm",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/tasks/{task-id}": {
			"delete": {
				"tags": [
					"task"
				],
				"summary": "Suppression d'une tâche",
				"description": "Suppression d'une tâche",
				"operationId": "deleteLinkedDatasetTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Tâche supprimée avec succès"
					}
				}
			}
		},
		"/linked-dataset/tasks/{task-id}/claim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Claim d'une tâche",
				"description": "Claim d'une tâche",
				"operationId": "claimLinkedDatasetTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/tasks/{task-id}/unclaim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Unclaim d'une tâche",
				"description": "Unclaim d'une tâche",
				"operationId": "unclaimLinkedDatasetTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/tasks/{task-id}/do-it/{action-name}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Fait avancer la tâche",
				"description": "Fait avancer la tâche à partir d'une action",
				"operationId": "doItLinkedDataset",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "action-name",
						"description": "Nom de l'action à réaliser",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/tasks": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Mets à jour une tâche",
				"description": "Mets à jour une tâche et l'asset associée",
				"operationId": "updateLinkedDatasetTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"task"
				],
				"summary": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"description": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"operationId": "createLinkedDatasetDraft",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/LinkedDataset"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/tasks/start": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Démarre la tâche",
				"description": "Démarre la tâche",
				"operationId": "startLinkedDatasetTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/linked-dataset/{datasetUuid}/myAccess": {
			"get": {
				"tags": [
					"linked-dataset"
				],
				"summary": "Définit si l'utilisateur connecté à un linked dataset",
				"description": "Définit si l'utilisateur connecté a accès au linked dataset ciblé",
				"parameters": [
					{
						"in": "path",
						"name": "datasetUuid",
						"description": "Uuid du linkedDataset auquel on souhaite avoir accès.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"operationId": "isMyAccessGratedToDataset",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				}
			}
		},
		"/linked-dataset/tasks/{task-id}/historic": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique d'une tâche (asset + tâche)",
				"description": "Récupération de l'historique d'une tâche (asset + tâche)",
				"operationId": "getLinkedDatasetTaskHistoryByTaskId",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/new-dataset-request/tasks/draft-form": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Chargement de formulaire draft s'il existe",
				"description": "Chargement de formulaire draft s'il existe",
				"operationId": "lookupNewDatasetRequestDraftForm",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Form"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks/{task-id}": {
			"delete": {
				"tags": [
					"task"
				],
				"summary": "Suppression d'une tâche",
				"description": "Suppression d'une tâche",
				"operationId": "deleteNewDatasetRequestTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Tâche supprimée avec succès"
					}
				}
			}
		},
		"/new-dataset-request/tasks/{task-id}/claim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Claim d'une tâche",
				"description": "Claim d'une tâche",
				"operationId": "claimNewDatasetRequestTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks/{task-id}/unclaim": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Unclaim d'une tâche",
				"description": "Unclaim d'une tâche",
				"operationId": "unclaimNewDatasetRequestTask",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks/{task-id}/do-it/{action-name}": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Fait avancer la tâche",
				"description": "Fait avancer la tâche à partir d'une action",
				"operationId": "doItNewDatasetRequest",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "action-name",
						"description": "Nom de l'action à réaliser",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Mets à jour une tâche",
				"description": "Mets à jour une tâche et l'asset associée",
				"operationId": "updateNewDatasetRequestTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"post": {
				"tags": [
					"task"
				],
				"summary": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"description": "Créé la tâche à partir de l'asset et l'asset s'il n'existe pas",
				"operationId": "createNewDatasetRequestDraft",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/NewDatasetRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks/start": {
			"put": {
				"tags": [
					"task"
				],
				"summary": "Démarre la tâche",
				"description": "Démarre la tâche",
				"operationId": "startNewDatasetRequestTask",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/new-dataset-request/tasks/{task-id}/historic": {
			"get": {
				"tags": [
					"task"
				],
				"summary": "Récupération de l'historique d'une tâche (asset + tâche)",
				"description": "Récupération de l'historique d'une tâche (asset + tâche)",
				"operationId": "getNewDatasetRequestTaskHistoryByTaskId",
				"parameters": [
					{
						"in": "path",
						"name": "task-id",
						"description": "Id de la tâche",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asAdmin",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-bpmn/openapi/rudi-bpmn-model.json#/components/schemas/ProcessHistoricInformation"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/my-linked-datasets": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche des linked datasets du user connecté",
				"description": "Recherche des linked datasets du user connecté",
				"operationId": "searchMyLinkedDatasets",
				"parameters": [
					{
						"name": "criteria",
						"in": "query",
						"description": "critères de recherches",
						"required": true,
						"schema": {
							"$ref": "./rudi-projekt-model.json#/components/schemas/LinkedDatasetSearchCriteria"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./rudi-projekt-model.json#/components/schemas/PagedLinkedDatasetList"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/my-new-dataset-requests": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche des new datasets request du user connecté",
				"description": "Recherche des new datasets request du user connecté",
				"operationId": "searchMyNewDatasetRequests",
				"parameters": [
					{
						"name": "criteria",
						"in": "query",
						"description": "critères de recherches",
						"required": true,
						"schema": {
							"$ref": "./rudi-projekt-model.json#/components/schemas/NewDatasetRequestSearchCriteria"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./rudi-projekt-model.json#/components/schemas/PagedNewDatasetRequestList"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/reutilisation-status": {
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Crée un statut de réutilisation",
				"description": "Crée un statut de réutilisation",
				"operationId": "createReutilisationStatus",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ReutilisationStatus"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Staut de réutilisation créé avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ReutilisationStatus"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Recherche de statut de réutilisation",
				"description": "Recherche de statut de réutilisation",
				"operationId": "searchReutilisationStatus",
				"parameters": [
					{
						"$ref": "#/components/parameters/ActiveParam"
					},
					{
						"$ref": "#/components/parameters/LimitParam"
					},
					{
						"$ref": "#/components/parameters/OffsetParam"
					},
					{
						"$ref": "#/components/parameters/OrderParam"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/PagedReutilisationStatusList"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/reutilisation-status/{uuid}": {
			"put": {
				"tags": [
					"projekt"
				],
				"summary": "Modifie un status de réutilisation",
				"description": "Modifie un status de réutilisation",
				"operationId": "updateReutilisationStatus",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-projekt-model.json#/components/schemas/ReutilisationStatus"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Statut de réutilisation modifié avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ReutilisationStatus"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			},
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Récupère un status de réutilisation donné",
				"description": "Récupère un status de réutilisation donné via son UUID",
				"operationId": "getReutilisationStatus",
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-projekt-model.json#/components/schemas/ReutilisationStatus"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/projects/{project-uuid}/keys": {
			"get": {
				"tags": [
					"projekt"
				],
				"summary": "Retourne la liste des clés d'un projet",
				"description": "Retourne la liste des clés d'un projet",
				"operationId": "searchProjectKeys",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "Uuid du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-acl/openapi/rudi-acl-model.json#/components/schemas/ProjectKeyPageResult"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			},
			"post": {
				"tags": [
					"projekt"
				],
				"summary": "Génère une nouvelle clé",
				"description": "Génère une nouvelle clé",
				"operationId": "createProjectKey",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "Uuid du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "./../../../rudi-facet/rudi-facet-acl/openapi/rudi-acl-model.json#/components/schemas/ProjectKeyCredential"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "./../../../rudi-facet/rudi-facet-acl/openapi/rudi-acl-model.json#/components/schemas/ProjectKey"
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		},
		"/projects/{project-uuid}/keys/{project-key-uuid}": {
			"delete": {
				"tags": [
					"projekt"
				],
				"summary": "Supprime/révoque une clé",
				"description": "Supprime/révoque une clé",
				"operationId": "deleteProjectKey",
				"parameters": [
					{
						"in": "path",
						"name": "project-uuid",
						"description": "Uuid du projet",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "project-key-uuid",
						"description": "Uuid de la clé",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"204": {
						"description": "OK"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"LimitParam": {
				"in": "query",
				"name": "limit",
				"description": "Le nombre de résultats à retourner par page",
				"schema": {
					"type": "integer",
					"format": "int32"
				}
			},
			"OffsetParam": {
				"in": "query",
				"name": "offset",
				"description": "Index de début (positionne le curseur pour parcourir les résultats de la recherche)",
				"schema": {
					"type": "integer",
					"format": "int32"
				}
			},
			"OrderParam": {
				"in": "query",
				"name": "order",
				"required": false,
				"schema": {
					"type": "string"
				}
			},
			"ActiveParam": {
				"in": "query",
				"name": "active",
				"required": false,
				"schema": {
					"type": "boolean"
				}
			},
			"OwnerUuidParam": {
				"name": "ownerUuid",
				"in": "path",
				"description": "UUID du porteur de projet",
				"required": true,
				"schema": {
					"$ref": "rudi-projekt-model.json#/components/schemas/OwnerUuid"
				},
				"example": "39a9d56e-1c99-47b5-9367-7aef7f4c075f"
			},
			"UuidToCheck": {
				"name": "uuidToCheck",
				"in": "path",
				"description": "UUID dont on veut verifier l'accès",
				"required": true,
				"schema": {
					"$ref": "rudi-projekt-model.json#/components/schemas/OwnerUuid"
				},
				"example": "39a9d56e-1c99-47b5-9367-7aef7f4c075f"
			}
		},
		"responses": {
			"InternalServerError": {
				"description": "Internal server error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"BadRequestError": {
				"description": "Bad Request Error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Unauthorized": {
				"description": "Unauthorized",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Forbidden": {
				"description": "Forbidden",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"NotAcceptable": {
				"description": "Not Acceptable",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"RequestTimeout": {
				"description": "Request Timeout",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"TooManyRequests": {
				"description": "Too Many Requests",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"ServiceUnavailable": {
				"description": "Service Unavailable"
			}
		},
		"schemas": {
			"ApiError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				}
			},
			"AppInfo": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Numéro de version de l'application"
					},
					"comment": {
						"type": "string",
						"description": "Description de la version de l'application"
					}
				}
			}
		}
	}
}
