<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.rudi</groupId>
		<artifactId>rudi-tools</artifactId>
		<version>3.3.0</version>
	</parent>
	<artifactId>rudi-tools-nodestub</artifactId>
	<name>rudi-tools-nodestub</name>

	<properties>
		<resource-directory>${project.basedir}/</resource-directory>
		<resource-generation-directory>${project.basedir}/</resource-generation-directory>
	</properties>


	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-common-core</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-common-test</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-common-facade</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-common-service</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-facet-kaccess</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-facet-oauth2</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-microservice-kalim-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rudi-microservice-strukture-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Server Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!--
		https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Swagger UI dependency -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>

		<!-- Swagger 2 doc dependency -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jasig.cas.client</groupId>
			<artifactId>cas-client-support-springboot</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
		</dependency>

	</dependencies>
	<build>
		<plugins>

			<!-- Génération de classes Java a partir de fichier SWAGGER -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi.plugin.version}</version>
				<configuration>
					<generatorName>spring</generatorName>
					<library>spring-boot</library>
					<generateModelTests>false</generateModelTests>
					<generateModelDocumentation>false</generateModelDocumentation>
					<generateSupportingFiles>true</generateSupportingFiles>
					<generateApiDocumentation>true</generateApiDocumentation>
					<generateApis>true</generateApis>
					<generateModels>true</generateModels>
					<templateDirectory>
						${resource-generation-directory}/openapi/generation/</templateDirectory>
					<verbose>false</verbose>
					<configOptions>
						<dateLibrary>java8</dateLibrary>
						<containerDefaultToNull>true</containerDefaultToNull>
						<useJakartaEe>true</useJakartaEe>
					</configOptions>
				</configuration>
				<executions>
					<execution>
						<id>generate-models</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<modelPackage>org.rudi.tools.nodestub.bean</modelPackage>
							<apiPackage>org.rudi.tools.nodestub.controller.api</apiPackage>
							<inputSpec>
								${resource-directory}/openapi/rudi-nodestub.json</inputSpec>
							<schemaMappings>
								Metadata=org.rudi.facet.kaccess.bean.Metadata,
								MetadataList=org.rudi.facet.kaccess.bean.MetadataList,
								Report=org.rudi.microservice.kalim.core.bean.Report,
								Method=org.rudi.microservice.kalim.core.bean.Method,
								ApiError=org.rudi.microservice.kalim.core.bean.ApiError,
								StruktureReport=org.rudi.microservice.strukture.core.bean.Report,
								StruktureMethod=org.rudi.microservice.strukture.core.bean.Method
							</schemaMappings>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<unhandledException>true</unhandledException>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-datafactory-api-recette</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<modelPackage>
								org.rudi.tools.nodestub.datafactory.apirecette.bean</modelPackage>
							<apiPackage>
								org.rudi.tools.nodestub.datafactory.apirecette.controller.api</apiPackage>
							<inputSpec>
								${resource-directory}/openapi/datafactory/api-recette.json</inputSpec>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<unhandledException>true</unhandledException>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/log4j2.xml</exclude>
						<exclude>**/nodestub-dev*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- JAR executable Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<finalName>${project.artifactId}</finalName>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>

		</plugins>
	</build>
</project>
